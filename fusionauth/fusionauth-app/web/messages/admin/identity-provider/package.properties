#
# Copyright (c) 2020-2023, FusionAuth, All Rights Reserved
#

# Messages
keyId=Key Identifier
add-key=Add Key
no-identity-providers=No identity providers
view-key=View Key
no-claims=No claims defined
no-default-selected=Not configured
not-specified-use-default=Not specified. Use default configuration
no-ip-tenant-configuration=No tenant configurations
no-search-results=No results match the criteria, or matching results are already configured.

# Labels
label.encodedKey=Encoded key
label.keyId=Key Id

claim-mapping=Claim mapping
discover-endpoints=Discover endpoints
managed-domains=Managed domains

overrides=Overrides

# Button actions
{button}add-claim=Add Claim
{button}add-tenant-configuration=Add tenant configuration


# Table columns
claim-key=Incoming claim
claim-value=FusionAuth user claim
create-registration=Create registration

domain-login=Domain login

select-samlv2-key=Select a signature verification key\u2026
select-samlv2-request-signing-key=Select a request signing key\u2026
select-apple-private-key=Select your signing key\u2026

# Fields
identityProviderId=Id
identityProvider.name=Name
identityProvider.debug=Debug enabled
identityProvider.enabled=Enabled
identityProvider.postRequest=Use POST method
identityProvider.linkingStrategy=Linking strategy

identityProvider.uniqueIdentityClaim=Unique claim
identityProvider.headerKeyParameter=Header key identifier

identityProvider.defaultKeyId=Default verification key

identityProvider.oauth2.authorization_endpoint=Authorization endpoint
identityProvider.oauth2.token_endpoint=Token endpoint
identityProvider.oauth2.client_id=Client Id
identityProvider.oauth2.client_secret=Client secret
identityProvider.oauth2.emailClaim=Email claim
identityProvider.oauth2.issuer=Issuer
identityProvider.oauth2.scope=Scope
identityProvider.oauth2.userinfo_endpoint=Userinfo endpoint
identityProvider.oauth2.usernameClaim=Username claim
identityProvider.oauth2.uniqueIdClaim=Unique Id claim
identityProvider.oauth2.clientAuthenticationMethod=Client authentication

identityProvider.client_id=Client Id
identityProvider.client_secret=Client secret
identityProvider.scope=Scope

identityProvider.consumerKey=Consumer key
identityProvider.consumerSecret=Consumer secret

# This is how Facebook names their fields 'App ID', and 'App Secret'
identityProvider.appId=App Id
identityProvider.appSecret=App secret
identityProvider.fields=Fields
identityProvider.permissions=Permissions

# Apple
identityProvider.bundleId=Bundle Id
identityProvider.issuer=Issuer
identityProvider.servicesId=Services Id
identityProvider.teamId=Team Id
identityProvider.signingKeyId=Signing key

# Facebook and Google
identityProvider.loginMethod=Login method

# HYPR
identityProvider.relyingPartyApplicationId=Application Id
identityProvider.relyingPartyURL=Relying party URL

identityProvider.buttonText=Button text
identityProvider.buttonImageURL=Button image

hypr-link=For more information about HYPR and how it can be used in FusionAuth, click on the provided link.

# SAML 2
identityProvider.emailClaim=Email claim
identityProvider.idpEndpoint=IdP endpoint
identityProvider.keyId=Verification key
identityProvider.lambdaConfiguration.reconcileId=Reconcile lambda
identityProvider.nameIdFormat=NameID format
identityProvider.requestSigningKeyId=Request signing key
identityProvider.signRequest=Sign requests
identityProvider.useNameIdForEmail=Use NameID for email
identityProvider.usernameClaim=Username claim
identityProvider.uniqueIdClaim=Unique Id claim
identityProvider.xmlSignatureC14nMethod=Canonicalization method

identityProvider.loginHintConfiguration.parameterName=Login hint parameter name
identityProvider.loginHintConfiguration.enabled=Enable login hint
identityProvider.assertionConfiguration.destination.policy=Destination assertion policy
identityProvider.assertionConfiguration.destination.alternates=Alternate destinations

# Leave a space at the end of this label
{widget-add-label}identityProvider.assertionConfiguration.destination.alternates=Add destination\u0020

identityProvider.idpInitiatedConfiguration.enabled=Enable IdP initiated login
identityProvider.idpInitiatedConfiguration.issuer=Issuer

# Tenant configuration
limit-user-links=Limit links per user
max-link-count=Maximum link count

# Login Method
UsePopup=Use popup for login
UseRedirect=Use redirect for login

# Descriptions
{description}apple-settings=Once you have saved your Apple configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}epicgames-settings=Once you have saved your Epic Games configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}google-settings=Once you have saved your Google configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}linkedin-settings=Once you have saved your LinkedIn configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}nintendo-settings=Once you have saved your Nintendo configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}oidc-settings=Once you have saved your OpenID Configuration configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}samlv2-settings=Once you have saved your SAML v2 configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}sonypsn-settings=Once you have saved your Sony PlayStation Network configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}steam-settings=Once you have saved your Steam configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}twitch-settings=Once you have saved your Twitch configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}twitter-settings=Once you have saved your Twitter configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}xbox-settings=Once you have saved your Xbox configuration, click the view icon <a style="pointer-events: none; border: 1px solid #e5e5e5; background-color: #f7f7f7;" class="small-square \
  button green-text"><i class="fa fa-search"></i></a> in the Identity Providers table to view the current configuration and integration details.
{description}claim-mapping=In order to synchronize additional identity claims from the Identity Provider fill out the corresponding Identity Claim found in the JWT issued by the Identity Provider. These fields will be updated in FusionAuth during each reconciliation request.<br><br>You may also use a reconcile Lambda in addition to or in place of this mapping configuration.
{description}domains=Specify one or more email domains that will be managed by this provider, when specified, the login button will not be displayed on the login page and \
  instead the User's email will first be collected and then if managed by this provider the User will be redirected to the Authorize endpoint to begin authentication. \
  It is required that the email address returned by the identity provider match one of these domains, it is only used to manage the initial redirect.
{description}external-jwt-domains=Define each email domain that will be managed by this Identity Provider. \
  If the JWT contains an email address that does not match this configuration it will be rejected.
{description}oauth2=These parameters are optional and if provided will be returned on the Identity Provider Lookup API response to be used for integration purposes.
{description}uniqueIdClaim-deprecated=Note, this configuration is deprecated. To update your configuration, clear this value and then FusionAuth will use <strong>Unique Id claim</strong>, <strong>Email claim</strong>, <strong>Username claim</strong> instead. Based upon the linking strategy FusionAuth will utilize the value resolved by the email or username claim configuration.

# SAML v2 Warning for IdP Initiated Login
{tell-me-more}samlv2-idp-initiated=Warning
{description}samlv2-idp-initiated=Note: Using Identity Provider Initiated Login, sometimes referred to as IdP initiated SSO is not recommended and is inherently less secure than a Service Provider initiated login. Click <strong>Warning</strong> for additional details.
{description}samlv2-idp-initiated-long=In general FusionAuth does not recommend you utilize this type of login due to the inherent risks of accepting an unsolicited authentication response from a third-party identity provider. In a service provider initiated login, the SAML Authentication Response is returned to the service provider (FusionAuth) in response to an authentication request. This means FusionAuth can validate certain parameters and only accept a response for a request that FusionAuth initiated. In contrast, during an identity provider initiated login, the third-party identity provider sends FusionAuth a SAML Authentication Response indicating a user has been authenticated without any context. The problem is that FusionAuth did not initiate this so it is unexpected, this limits what can be verified and requires FusionAuth to allow a cross site request from this third party. If you must enable this feature to support a legacy integration or because the user experience is of the highest concern, then you may proceed.

# Placeholder
{placeholder}identityProvider.headerKeyParameter=kid

# Using "Sign in with Apple" instead of "Login" to comply with Apple UX guidelines
{placeholder}appleButtonText=e.g. Sign in with Apple
{placeholder}epicgamesButtonText=e.g. Login with Epic Games
{placeholder}facebookButtonText=e.g. Login with Facebook
{placeholder}googleButtonText=e.g. Login with Google
{placeholder}linkedInButtonText=e.g. Sign in with LinkedIn
{placeholder}nintendoButtonText=e.g. Login with Nintendo
{placeholder}openIdButtonText=e.g. Login with OpenID Connect
{placeholder}samlv2ButtonText=e.g. Login with SAML
{placeholder}sonypsnButtonText=e.g. Login with Sony PlayStation Network
{placeholder}steamButtonText=e.g. Login with Steam
{placeholder}twitchButtonText=e.g. Login with Twitch
{placeholder}twitterButtonText=e.g. Login with Twitter
{placeholder}xboxButtonText=e.g. Login with Xbox

# Tabs
domains=Managed Domains
jwt=JWT
oauth2=OAuth

# Claim Types
Email=Email
Username=Username

# OpenID Connect client authentication methods
none=None
client_secret_basic=HTTP basic authentication (client_secret_basic)
client_secret_post=Request body (client_secret_post)

# Tooltips
{tooltip}identityProvider.buttonText=The text to display in the login button

{tooltip}identityProvider.debug=Enable debug to create an event log to assist you in debugging integration errors

{tooltip}identityProvider.linkingStrategy=<p>The link strategy allows you to control how to handle the reconcile procedure when the link has not yet been established with the 3rd party identity provider.</p>\
  <strong>Anonymous Link</strong> \
  <p>Always create a link based upon the unique Id returned by the identity provider. A username or email is not required and will not be used to link the user. A reconcile lambda will not be used in this configuration.</p> \
  <strong>Create pending link</strong> \
  <p>Do not automatically link, instead return a pending link identifier that can be used to link to an existing user.</p> \
  <strong>Linking disabled</strong> \
  <p>Do not automatically link.</p> \
  <strong>Link on email. Create the user if they do not exist</strong> \
  <p>Link to an existing user based upon email. A user will be created with the email returned by the identity provider if one does not already exist.</p> \
  <strong>Link on email. Do not create the user if they do not exist</strong> \
  <p>Only link to an existing user based upon email. A user will not be created if one does not already exist with email returned by the identity provider.</p> \
  <strong>Link on username. Create the user if they do not exist</strong> \
  <p>Link to an existing user based upon username. A user will be created with the username returned by the identity provider if one does not already exist.</p> \
  <strong>Link on username. Do not create the user if they do not exist</strong> \
  <p>Only link to an existing user based upon username. A user will not be created if one does not already exist with the username returned by the identity provider.</p>

# OpenID Connect and OAuth2
{tooltip}identityProvider.uniqueIdentityClaim=The name of the claim that uniquely identifies the User's email address
{tooltip}identityProvider.headerKeyParameter=The header key that identifies the key used to sign the token generally kid, or x5t if using certificates
{tooltip}identityProvider.oauth2.authorization_endpoint=The full URL to the OAuth2 Authorize endpoint
{tooltip}identityProvider.oauth2.token_endpoint=The full URL to the OAuth2 Token endpoint
{tooltip}identityProvider.oauth2.client_id=The OAuth2 client_id that has been provided by your identity provider
{tooltip}identityProvider.oauth2.client_secret=The OAuth2 client_secret that has been provided by your identity provider
{tooltip}identityProvider.oauth2.emailClaim=The name of the claim that will contain an email address
{tooltip}identityProvider.oauth2.issuer=The full URL to the OpenID Connect issuer used for endpoint discovery, disable endpoint discovery to manually configure each endpoint, for example https://acme.com
{tooltip}identityProvider.oauth2.scope=The OAuth2 scope, this is a space separated list of one or more values
{tooltip}identityProvider.oauth2.userinfo_endpoint=Full URL to the OAuth2 Userinfo endpoint
{tooltip}identityProvider.oauth2.usernameClaim=The name of the claim that will contain a username
{tooltip}identityProvider.oauth2.uniqueIdClaim=The name of the claim that contains the immutable unique Id of the user
{tooltip}identityProvider.oauth2.clientAuthenticationMethod=\
  <strong>HTTP Basic Authentication</strong> \
  <p>Authenticate by passing the client secret in the Authorization header using the HTTP basic authentication scheme. This is the default setting and recommended unless your identity provider has specified a different method.</p> \
  <strong>Request Body</strong> \
  <p>Authenticate by passing the client secret in the request body.</p> \
  <strong>None</strong> \
  <p>No authentication is required. This is generally only used when the client is not able of securely holding a secret.</p>
{tooltip}identityProvider.buttonImageURL=The URL of a square image to display on the login button, if no URL is provided a default image will be displayed
{tooltip}useOpenIdDiscovery=Enable discovery to allow the required endpoints to be discovered using the OpenID Connect well-known configuration

# Used by several providers
{tooltip}identityProvider.client_id=The client Id for this identity provider
{tooltip}identityProvider.client_secret=The client secret for this identity provider
{tooltip}identityProvider.postRequest=When enabled the authentication request will use the HTTP POST binding with the identity provider instead of the default HTTP redirect binding which uses the HTTP GET method
{tooltip}identityProvider.scope=The optional scope for this identity provider

# Apple
{tooltip}identityProvider.bundleId=The Apple Bundle Id you have configured in your Apple developer account to uniquely identify your native app
{tooltip}identityProvider.servicesId=The Apple Services Id you have configured in your Apple developer account
{tooltip}identityProvider.teamId=The Apple Team Id provided as part of your App ID configuration, also called the App ID Prefix
{tooltip}identityProvider.signingKeyId=The private key used to sign the client secret

# Facebook and Google
{tooltip}identityProvider.loginMethod=The login method to use popup (and the identity provider javascript library) or redirect to the identity provider authentication url

# HYPR
{tooltip}identityProvider.relyingPartyApplicationId=The applicationId provided to you by HYPR
{tooltip}identityProvider.relyingPartyURL=The relying party URL provided to you by HYPR

# Twitter
{tooltip}identityProvider.consumerKey=The consumer key for the Twitter API
{tooltip}identityProvider.consumerSecret=The consumer secret for the Twitter API

# Facebook
{tooltip}identityProvider.appId=The Facebook App Id
{tooltip}identityProvider.fields=The optional Facebook fields to request during authentication
{tooltip}identityProvider.permissions=The optional Facebook permissions to request during authentication

# SAML
{tooltip}identityProvider.emailClaim=The name of the claim that is returned in the SAML response that contains the email address of the user
{tooltip}identityProvider.idpEndpoint=The full URL to the SAML v2 login endpoint
{tooltip}identityProvider.idpInitiatedConfiguration.enabled=Allow IdP initiated login requests
{tooltip}identityProvider.issuer=The EntityId (unique identifier) of the SAML v2 identity provider, this value will be provided to you
{tooltip}identityProvider.keyId=A key or certificate that is used to verify the signature of the SAML response
{tooltip}identityProvider.lambdaConfiguration.reconcileId=A lambda that is executed after the user authenticates with the third-party identity provider. This lambda can copy claims into FusionAuth from the external identity provider
{tooltip}identityProvider.nameIdFormat=The NameID format to send to the SAML v2 identity provider in the AuthN request
{tooltip}identityProvider.requestSigningKeyId=The key-pair to use to sign the SAML request
{tooltip}identityProvider.signRequest=Enable to sign the authentication request sent to the identity provider
{tooltip}identityProvider.useNameIdForEmail=Tells FusionAuth to use the Subject/NameID XML elements from the SAML response to resolve the user's email address
{tooltip}identityProvider.usernameClaim=The name of the claim that is returned in the SAML response that contains the username address of the user
{tooltip}identityProvider.uniqueIdClaim=The name of the claim that is returned in the SAML response that contains the unique Id of the user
{tooltip}identityProvider.xmlSignatureC14nMethod=The canonicalization method used for the XML signature. This must match the identity providers expected or supported value. This is only used when HTTP POST bindings are used.
{tooltip}identityProvider.loginHintConfiguration.enabled=Enable to provide the username or email address when available to the IdP as a login hint when HTTP redirect bindings are used to initiate the AuthN request
{tooltip}identityProvider.loginHintConfiguration.parameterName=The name of the parameter sent to the IdP when enabled, and HTTP redirect bindings are used to initiate the AuthN request
#language=HTML
{tooltip}identityProvider.assertionConfiguration.destination.policy= \
  This policy controls the verification of the Destination attribute on the SAML response. \
  <p/> \
  <strong>Enabled</strong> \
  <p>Verifies the Destination attribute in the SAML response is equal to the expected Destination which is the FusionAuth \
  ACS (Assertion Consumer Service) URL. This is the default and the recommended setting.</p> \
  <strong>Disabled</strong> \
  <p>Do not validate the Destination attribute. This is not recommend, please use with caution.</p> \
  <strong>Allow alternates</strong> \
  <p>Verifies the Destination attribute is either the expected FusionAuth ACS, or one of the configured alternate values. This \
  option is intended to assist with migrations from third-party IdPs and should be used with caution.</p>
{tooltip}identityProvider.assertionConfiguration.destination.alternates=The list of allowed alternate values for the Destination attribute other than the expected FusionAuth ACS


# Tenant configuration
{tooltip}identityProvider.tenantConfiguration.limitUserLinkCount.enabled=When enabled the number of links allowed from this identity provider to a user will be limited to the selected number. This will not affect existing users that may have already exceeded this configuration
{tooltip}identityProvider.tenantConfiguration.limitUserLinkCount.maximumLinks=The number of links allowed for this identity provider to any single user

#Steam
identityProvider.webAPIKey=Web API key
{tooltip}identityProvider.webAPIKey=The web API key for this identity provider
[blank]identityProvider.webAPIKey=Required

# External JWT
{tooltip}identityProvider.defaultKeyId=This configuration is optional and only used when an incoming JWT has not provided a key identifier (kid) to indicate which key is to be used when validating the signature. If the incoming JWT contains a key identifier the key must only exist in Key Master

# Domain based IdPs
{tooltip}domains=Specify one or more email domains that will be managed by this provider, when specified, the login button will not be displayed on the login page and \
  instead the User's email will first be collected and then if managed by this provider the User will be redirected to the Authorize endpoint to begin authentication. \
  This configuration will not require the email address returned by the identity provider match, it is only used to manage the initial redirect.

# Errors
[couldNotConvert]identityProviderId=Invalid UUID
[duplicate]identityProviderId=That Id already exists

[blank]identityProvider.name=Required
[duplicate]identityProvider.id=Already exists
[duplicate]identityProvider.name=Already exists
[invalid]identityProvider.name=Reserved
[blank]identityProvider.headerKeyParameter=Required
[blank]identityProvider.uniqueIdentityClaim=Required
[invalid]domains=Invalid syntax. Please verify each line represents a single domain.
[duplicate]domains=One or more of the managed domains are currently managed by another Identity Provider.
[couldNotConvert]identityProvider.oauth2.authorization_endpoint=Invalid URL
[couldNotConvert]identityProvider.oauth2.token_endpoint=Invalid URL

[blank]identityProvider.oauth2.authorization_endpoint=Required
[blank]identityProvider.oauth2.token_endpoint=Required
[blank]identityProvider.oauth2.userinfo_endpoint=Required

[blank]identityProvider.oauth2.client_id=Required
[blank]identityProvider.oauth2.client_secret=Required
[blank]identityProvider.oauth2.issuer=Required
[blank]identityProvider.oauth2.scope=Required
[blank]identityProvider.oauth2.emailClaim=Required

[blank]identityProvider.client_id=Required
[blank]identityProvider.client_secret=Required

[blank]identityProvider.scope=Required
[blank]identityProvider.appId=Required
[blank]identityProvider.consumerKey=Required
[blank]identityProvider.consumerSecret=Required
[blank]identityProvider.fields=Required
[blank]identityProvider.permissions=Required
[blank]identityProvider.buttonText=Required

[invalid]identityProvider.oauth2.issuer=Failed to discover the well known OpenID configuration. Try disabling discover endpoints, or view the Event Log for additional detail.
[missing]identityProvider.oauth2.authorization_endpoint=The issuer has not defined the Authorize endpoint. You may disable discover endpoints, and manually enter the endpoints.
[missing]identityProvider.oauth2.token_endpoint=The issuer has not defined the Token endpoint. You may disable discover endpoints, and manually enter the endpoints.
[missing]identityProvider.oauth2.userinfo_endpoint=The issuer has not defined the Userinfo endpoint. You may disable discover endpoints, and manually enter the endpoints.
[missing]identityProvider.oauth2.client_secret=Required

[invalidURL]identityProvider.oauth2.authorization_endpoint=Invalid URL
[invalidURL]identityProvider.oauth2.token_endpoint=Invalid URL
[invalidURL]identityProvider.oauth2.userinfo_endpoint=Invalid URL

# Apple
[blank]identityProvider.bundleId=Required
[blank]identityProvider.servicesId=Required

# External JWT
[invalid]identityProvider.defaultKeyId=Invalid

# HYPR errors
[blank]identityProvider.relyingPartyApplicationId=Required
[missing]identityProvider.relyingPartyURL=Required

[invalidURL]identityProvider.applicationConfiguration.relyingPartyURL=Invalid URL
[invalidURL]identityProvider.relyingPartyURL=Invalid URL

# SAML errors
[blank]identityProvider.emailClaim=Required
[blank]identityProvider.idpEndpoint=Required
[invalidURL]identityProvider.idpEndpoint=Invalid URL
[missing]identityProvider.keyId=Required
[missing]identityProvider.requestSigningKeyId=Required
[invalid]identityProvider.requestSigningKeyId=Invalid
[missing]identityProvider.xmlSignatureC14nMethod=Required

# Tenant configuration
[invalid]identityProvider.tenantConfiguration.limitUserLinkCount.maximumLinks=Must be greater than 0

# General Errors
[notLicensed]=To use this Identity Provider you must <a href="/admin/reactor/">activate the Reactor</a> with a valid license key.

# Exceptions
[NotFoundException]=The identity provider has been deleted. Refresh your browser.
