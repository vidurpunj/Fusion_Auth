#
# Copyright (c) 2020-2022, FusionAuth, All Rights Reserved
#

# Tabs
general=General

# Titles, headers, etc.
mfa=Multi-Factor
connectors=Connectors
oauth=OAuth
scim=SCIM

blockedDomains=Blocked domains

additionalEmailHeaders=Additional headers
blocked-domains-settings=Blocked domains settings
connector-settings=Connector settings
breached-password-detection-settings=Breached password detection settings
email-verification-settings=Email verification settings
failed-login-settings=Failed authentication settings
family-settings=Family settings
form-settings=Form settings
access-control-lists-settings=Access control lists settings
login-settings=Login API settings
password-encryption-settings=Cryptographic hash settings
password-settings=Password settings
rate-limit-settings=Rate limit settings
smtp-settings=SMTP settings
template-settings=Template settings
theme=Login theme
transport=Transport
username-settings=Username settings

tx-managed-by-user.action=Not configured here, managed by the User Action

# Multi-Factor
multi-factor-authenticator-settings=Authenticator settings
multi-factor-email-settings=Email settings
multi-factor-sms-settings=SMS settings
multi-factor-policies=Policies

# WebAuthn
webauthn-bootstrap-settings=Bootstrap settings
webauthn-reauthentication-settings=Re-authentication settings

no-email-templates=No email templates defined. You must create email templates to enable email verification and forgot password handling.

# SMTP Test
send-test-email=Send test email

external-identifiers-duration=External identifier durations
external-identifiers-generator=External identifier generation

# Secure generator types
randomDigits=Digits
randomBytes=Encoded bytes
randomAlpha=Alphabetical characters
randomAlphaNumeric=Alphanumerical characters

# Edit SMTP password options
editPasswordOption=Change password
update=Change password
useExisting=Do not change password

# Tell me more
{tell-me-more}external-identifiers-generator=Warning
{tell-me-more}connector-settings=Tell Me More

# Descriptions
{description}blocked-domains-settings=Optionally configure one or more domains that will be blocked from registration. This may be helpful to keep self-service registration forms from accepting email addresses from a protected domain such as your primary corporate domain. 
{description}captcha-settings=A CAPTCHA is a type of challengeâ€“response test used in computing to determine whether or not the user is human. CAPTCHA is an acronym for "Completely Automated Public Turing test to tell Computers and Humans Apart". When enabled it is used to help increase security of a form submission on the FusionAuth themed pages. Enable to utilize this feature and select from the available CAPTCHA methods.
{description}connector-settings=The connector policy configuration allows you to retrieve and authenticate users from external data sources. The connector policy rules are applied in order when a user authenticates for the first time.
{description}connector-settings-long=Connectors are used to configure how a user is retrieved and authenticated in FusionAuth. The following is an ordered list of policies that will be used to authenticate and retrieve users. The policy will be applied in order to identify the source of authentication for a user. After a user has been authenticated, the same connector will be used on subsequent requests until the user has been migrated.
{description}failed-login-settings=The failed authentication settings are used to help prevent brute force authentication.
{description}access-control-lists-settings=An Access Control List, often referred to as an ACL allows you to restrict access to FusionAuth. Optionally configure an IP Access Control List to restrict end user access by IP address.
{description}multi-factor-settings=The multi-factor authentication settings allows you to define policies and templates for use when users utilize two-factor authentication during login.
{description}multi-factor-policies=These multi-factor policies allow you to configure when a two-factor challenge is required.
{description}multi-factor-authenticator-settings=Enable to allow users to utilize an authenticator application to complete a two-factor authentication request. This is often referred to as TOTP (Time Based One Time Password), or a Google Authenticator.
{description}multi-factor-email-settings=Enable to allow users to utilize an email address to complete a two-factor authentication request.
{description}multi-factor-sms-settings=Enable to allow users to utilize a mobile phone number to complete a two-factor authentication request.
{description}family-settings=Manage parent / child user relationships, useful for COPPA compliance
{description}form-settings=Manage custom forms used by FusionAuth. Select a custom form used to add and edit users within the FusionAuth admin UI.
{description}external-identifiers-1=An external identifier is a unique expiring token used to complete a workflow such as change password. For   example when you start the forgot password or setup password workflow for a User an identifier is generated. This generated identifier is used   to allow the User to change their password.
{description}external-identifiers-2=The following configuration sets the duration in seconds the identifier is valid.
{description}external-identifiers-generator=The following configuration allows you to override the default strategy for generating random identifiers. In most cases you will want to leave the defaults. Click <strong>Warning</strong> for a more complete explanation.
{description}external-identifiers-generator-long=Using <strong>Digits</strong>, <strong>Alphabetical</strong> or <strong>Alphanumerical</strong> will reduce the complexity of the identifier because there will be fewer possible combinations of the code. When you intend to use these codes in an interactive workflow where the user needs to type in a code received through email or SMS, the usability of a short value may be a better choice. Please ensure you understand the trade-off between usability and security when modifying this configuration.
{description}jwt-settings=These are the tenant default configurations for the JSON web token settings. These settings will be used unless the Application enables its own JSON Web Token configuration.
{description}login-settings=The Login API settings allow you to control access to the Login API. This configuration will not affect authentication via OAuth grants.
{description}refresh-token-settings=These are the tenant default configurations for the refresh token settings. These settings will be used unless the Application enables its own JSON Web Token configuration.
{description}breached-password-detection-settings=Breached password detection allows known breached passwords to be rejected during a password change request and optionally as part of a login request. This feature is part of the FusionAuth Reactor &trade; suite and is included with all paid editions of FusionAuth. For more information navigate to <a href="/admin/reactor/">Reactor</a> in the left navigation.
{description}password-encryption-settings=The cryptographic hash settings provide the default parameters for hashing passwords.
{description}password-settings=The password settings are used when a new user is created or a user requests a password change.
{description}rate-limit-settings=The Rate limit settings allow you to set a number of times an action can be attempted within a specific time frame. When the limit is exceeded, that action is unavailable until the configured time frame elapses without a failed attempt. The settings are evaluated and enforced per user. 
{description}scim-server-settings=The configurations for the FusionAuth SCIM Server. These settings will be used when SCIM clients send requests to FusionAuth SCIM API.
{description}smtp-settings=The outgoing SMTP mail server settings are used to allow FusionAuth to send emails.
{description}smtp-settings-advanced=In some cases your SMTP server will require additional configuration. When necessary you may override or add additional configuration to the SMTP configuration by adding additional properties. Generally you will want to be instructed by FusionAuth support before adding additional configuration properties.
{description}template-settings=Select the email templates to be utilized for the following events.
{description}oauth-settings=This provides the tenant OAuth 2.0 configuration settings for FusionAuth. Each application may optionally supply a more specific logout URL.
{description}username-settings=Enable to instruct FusionAuth to append a randomly selected sequence of digits to ensure all usernames are unique.
{description}webauthn-settings=The WebAuthn settings allow you to define policies for use when users register or utilize a passkey to authenticate. These settings apply to all applications in this tenant unless application specific WebAuthn configuration is enabled.
{description}webauthn-bootstrap-settings=Enable to allow users to authenticate on personal devices using a passkey after identifying themselves (e.g. with username or email). This workflow can be used to authenticate from a new device using WebAuthn.
{description}webauthn-reauthentication-settings=Enable to allow users to re-authenticate on personal devices using WebAuthn.
{description}webhook-settings=Use this configuration to enable webhooks to receive events produced by this tenant. You may also perform this configuration from the Webhooks configuration found under Settings. A webhook configured for 'All tenants' is shown as enabled because it will receive events for this tenant, and the checkbox control has been disabled because you can only modify this behavior by changing it in the webhook configuration.
{description}webhook-transactions=You can enable or disable each event, and optionally configure the transaction setting per event. Each webhook may still choose to only participate for specific events but the transaction setting will be used for all participating webhooks.


# Fields
tenant.name=Name
themeId=Theme Id

# General configuration
tenant.issuer=Issuer

# OAuth2
oauth-settings=OAuth 2.0 and OpenID Connect settings
tenant.httpSessionMaxInactiveInterval=Session timeout
tenant.logoutURL=Logout URL

# Email configuration
tenant.emailConfiguration.debug=Debug
tenant.emailConfiguration.emailUpdateEmailTemplateId=Email update
tenant.emailConfiguration.emailVerifiedEmailTemplateId=Verification complete template
tenant.emailConfiguration.forgotPasswordEmailTemplateId=Forgot password
tenant.emailConfiguration.host=Host
tenant.emailConfiguration.implicitEmailVerificationAllowed=Allow implicit verification
tenant.emailConfiguration.loginIdInUseOnCreateEmailTemplateId=Login Id duplicate on create
tenant.emailConfiguration.loginIdInUseOnUpdateEmailTemplateId=Login Id duplicate on update
tenant.emailConfiguration.loginNewDeviceEmailTemplateId=Login with new device
tenant.emailConfiguration.loginSuspiciousEmailTemplateId=Suspicious login
tenant.emailConfiguration.password=Password
tenant.emailConfiguration.passwordResetSuccessEmailTemplateId=Password reset success
tenant.emailConfiguration.passwordUpdateEmailTemplateId=Password update
tenant.emailConfiguration.passwordlessEmailTemplateId=Passwordless login
tenant.emailConfiguration.port=Port
tenant.emailConfiguration.properties=Additional properties
tenant.emailConfiguration.security=Security
tenant.emailConfiguration.setPasswordEmailTemplateId=Setup password
tenant.emailConfiguration.twoFactorMethodAddEmailTemplateId=Two-factor method added
tenant.emailConfiguration.twoFactorMethodRemoveEmailTemplateId=Two-factor method removed
tenant.emailConfiguration.verificationEmailTemplateId=Verification template
tenant.emailConfiguration.verifyEmail=Verify email
tenant.emailConfiguration.verifyEmailWhenChanged=Verify email when changed
tenant.emailConfiguration.username=Username
tenant.emailConfiguration.defaultFromEmail=Default from address
tenant.emailConfiguration.defaultFromName=Default from name
tenant.emailConfiguration.unverified.behavior=Unverified behavior
tenant.emailConfiguration.unverified.allowEmailChangeWhenGated=Allow email change when gated
tenant.emailConfiguration.verificationStrategy=Verification strategy

# Failed authentication
tenant.failedAuthenticationConfiguration.actionCancelPolicy.onPasswordReset=Cancel action on password reset
tenant.failedAuthenticationConfiguration.emailUser=Email user
tenant.failedAuthenticationConfiguration.userActionId=User action
tenant.failedAuthenticationConfiguration.tooManyAttempts=Failed attempts
tenant.failedAuthenticationConfiguration.resetCountInSeconds=Time period
tenant.failedAuthenticationConfiguration.actionDuration=Action duration
tenant.failedAuthenticationConfiguration.actionDurationUnit=Time unit

# Login API Settings
tenant.loginConfiguration.requireAuthentication=Require an API key

# Multi-Factor configuration
tenant.multiFactorConfiguration.authenticator.enabled=Enabled

tenant.multiFactorConfiguration.email.enabled=Enabled
tenant.multiFactorConfiguration.email.templateId=Template

tenant.multiFactorConfiguration.sms.enabled=Enabled
tenant.multiFactorConfiguration.sms.messengerId=Messenger
tenant.multiFactorConfiguration.sms.templateId=Template

tenant.multiFactorConfiguration.loginPolicy=On login

# WebAuthn configuration
tenant.webAuthnConfiguration.debug=Debug enabled
tenant.webAuthnConfiguration.enabled=Enabled
tenant.webAuthnConfiguration.relyingPartyId=Relying party Id
tenant.webAuthnConfiguration.relyingPartyName=Relying party name
tenant.webAuthnConfiguration.bootstrapWorkflow.enabled=Enabled
tenant.webAuthnConfiguration.bootstrapWorkflow.authenticatorAttachmentPreference=Authenticator attachment
tenant.webAuthnConfiguration.bootstrapWorkflow.userVerificationRequirement=User verification
tenant.webAuthnConfiguration.reauthenticationWorkflow.enabled=Enabled
tenant.webAuthnConfiguration.reauthenticationWorkflow.authenticatorAttachmentPreference=Authenticator attachment
tenant.webAuthnConfiguration.reauthenticationWorkflow.userVerificationRequirement=User verification

# Threat Detection configuration
captcha-settings=Captcha Settings

tenant.captchaConfiguration.captchaMethod=Method
tenant.captchaConfiguration.enabled=Enabled
tenant.captchaConfiguration.secretKey=Secret key
tenant.captchaConfiguration.siteKey=Site key
tenant.captchaConfiguration.threshold=Threat score threshold

GoogleRecaptchaV2=Google reCAPTCHA v2
GoogleRecaptchaV3=Google reCAPTCHA v3
HCaptcha=hCaptcha
HCaptchaEnterprise=hCaptcha Enterprise

# Family configuration
tenant.familyConfiguration.allowChildRegistrations=Allow child registrations
tenant.familyConfiguration.confirmChildEmailTemplateId=Confirm child account template
tenant.familyConfiguration.deleteOrphanedAccounts=Delete unverified children
tenant.familyConfiguration.deleteOrphanedAccountsDays=Delete after
tenant.familyConfiguration.familyRequestEmailTemplateId=Family request template
tenant.familyConfiguration.enabled=Enabled
tenant.familyConfiguration.maximumChildAge=Maximum child age
tenant.familyConfiguration.minimumOwnerAge=Minimum owner age
tenant.familyConfiguration.parentEmailRequired=Parent email required during registration
tenant.familyConfiguration.parentRegistrationEmailTemplateId=Parent registration request template

# External identifiers
tenant.externalIdentifierConfiguration.authorizationGrantIdTimeToLiveInSeconds=Authorization code
tenant.externalIdentifierConfiguration.changePasswordIdTimeToLiveInSeconds=Change password
tenant.externalIdentifierConfiguration.emailVerificationIdTimeToLiveInSeconds=Email verification
tenant.externalIdentifierConfiguration.externalAuthenticationIdTimeToLiveInSeconds=External Authentication
tenant.externalIdentifierConfiguration.deviceCodeTimeToLiveInSeconds=Device grant codes
tenant.externalIdentifierConfiguration.deviceUserCode=Device grant user code
tenant.externalIdentifierConfiguration.emailVerificationOneTimeCodeGenerator=Email verification one-time code
tenant.externalIdentifierConfiguration.oneTimePasswordTimeToLiveInSeconds=One-time password
tenant.externalIdentifierConfiguration.passwordlessLoginTimeToLiveInSeconds=Passwordless login
tenant.externalIdentifierConfiguration.pendingAccountLinkTimeToLiveInSeconds=Pending account link
tenant.externalIdentifierConfiguration.registrationVerificationIdTimeToLiveInSeconds=Registration verification
tenant.externalIdentifierConfiguration.registrationVerificationOneTimeCodeGenerator=Registration verification one-time code
tenant.externalIdentifierConfiguration.samlv2AuthNRequestIdTimeToLiveInSeconds=SAMLv2 AuthN request
tenant.externalIdentifierConfiguration.setupPasswordIdTimeToLiveInSeconds=Setup password
tenant.externalIdentifierConfiguration.trustTokenTimeToLiveInSeconds=Trust token
tenant.externalIdentifierConfiguration.twoFactorIdTimeToLiveInSeconds=Two-Factor login
tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdTimeToLiveInSeconds=Two-Factor one-time code
tenant.externalIdentifierConfiguration.twoFactorTrustIdTimeToLiveInSeconds=Two-Factor trust
tenant.externalIdentifierConfiguration.webAuthnAuthenticationChallengeTimeToLiveInSeconds=WebAuthn authentication
tenant.externalIdentifierConfiguration.webAuthnRegistrationChallengeTimeToLiveInSeconds=WebAuthn registration

# SCIM Server
scim-server-settings=SCIM server settings
tenant.scimServerConfiguration.enabled=Enabled
tenant.lambdaConfiguration.scimUserRequestConverterId=User request lambda
tenant.lambdaConfiguration.scimUserResponseConverterId=User response lambda
tenant.lambdaConfiguration.scimEnterpriseUserRequestConverterId=Enterprise User request lambda
tenant.lambdaConfiguration.scimEnterpriseUserResponseConverterId=Enterprise User response lambda
tenant.lambdaConfiguration.scimGroupRequestConverterId=Group request lambda
tenant.lambdaConfiguration.scimGroupResponseConverterId=Group Response lambda
tenant.scimServerConfiguration.clientEntityTypeId=Client entity type
tenant.scimServerConfiguration.serverEntityTypeId=Server entity type
scimSchemas=Schemas

none-selected-scim-client-entity-type-required=Select a client entity type\u2026
none-selected-scim-server-entity-type-required=Select a server entity type\u2026

# Security
tenant.accessControlConfiguration.uiIPAccessControlListId=Access control list
none-selected-access-control-list=Feature disabled. No Access Control List selected.

rate-limiting-action=Action
rate-limiting-limit=Limit
rate-limiting-time=Time period
tenant.rateLimitConfiguration.failedLogin=Failed login
tenant.rateLimitConfiguration.forgotPassword=Forgot password
tenant.rateLimitConfiguration.sendEmailVerification=Resend email verification
tenant.rateLimitConfiguration.sendRegistrationVerification=Resend registration verification
tenant.rateLimitConfiguration.sendPasswordless=Send passwordless email
tenant.rateLimitConfiguration.sendTwoFactor=Send two-factor

# Forms
tenant.formConfiguration.adminUserFormId=Admin user form 

# JWT
jwt-settings=JSON web token settings
tenant.jwtConfiguration.accessTokenKeyId=Access token signing key
tenant.jwtConfiguration.idTokenKeyId=Id token signing key

refresh-token-settings=Refresh token settings
tenant.jwtConfiguration.refreshTokenExpirationPolicy=Refresh token expiration
tenant.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Refresh token duration
tenant.jwtConfiguration.refreshTokenRevocationPolicy=Refresh token revocation
tenant.jwtConfiguration.refreshTokenUsagePolicy=Refresh token usage
tenant.jwtConfiguration.timeToLiveInSeconds=JWT duration

# Refresh Token revocation policy values
tenant.jwtConfiguration.refreshTokenRevocationPolicy.onLoginPrevented=On action preventing login
tenant.jwtConfiguration.refreshTokenRevocationPolicy.onMultiFactorEnable=On multi-factor enable
tenant.jwtConfiguration.refreshTokenRevocationPolicy.onPasswordChanged=On password change

# OAuth config
tenant.oauthConfiguration.clientCredentialsAccessTokenPopulateLambdaId=Client credentials populate lambda

# Login theme
tenant.themeId=Theme

device-trust-settings=Device trust settings
tenant.ssoConfiguration.deviceTrustTimeToLiveInSeconds=Device trust duration

# Passwords
tenant.minimumPasswordAge.enabled=Minimum age
tenant.minimumPasswordAge.seconds=Minimum age
tenant.maximumPasswordAge.enabled=Expiration
tenant.maximumPasswordAge.days=Expiration
tenant.passwordEncryptionConfiguration.encryptionScheme=Scheme
tenant.passwordEncryptionConfiguration.encryptionSchemeFactor=Factor
tenant.passwordEncryptionConfiguration.modifyEncryptionSchemeOnLogin=Re-hash on login or change

# Password validation
tenant.passwordValidationRules.rememberPreviousPasswords.enabled=Reject previous passwords
tenant.passwordValidationRules.rememberPreviousPasswords.count=Number of passwords
tenant.passwordValidationRules.minLength=Minimum length
tenant.passwordValidationRules.maxLength=Maximum length
tenant.passwordValidationRules.requireMixedCase=Uppercase & lowercase
tenant.passwordValidationRules.requireNonAlpha=Special character
tenant.passwordValidationRules.requireNumber=Number
tenant.passwordValidationRules.validateOnLogin=Re-validate on login

# Breach detection
tenant.passwordValidationRules.breachDetection.enabled=Enabled
tenant.passwordValidationRules.breachDetection.onLogin=On login
tenant.passwordValidationRules.breachDetection.matchMode=Match mode
tenant.passwordValidationRules.breachDetection.notifyUserEmailTemplateId=Notify user template

# Username settings
tenant.usernameConfiguration.unique.enabled=Unique usernames
tenant.usernameConfiguration.unique.numberOfDigits=Number of digits
tenant.usernameConfiguration.unique.separator=Separator character
tenant.usernameConfiguration.unique.strategy=Strategy

# Breach match mode
Low=Low (Exact match on an email or username, or the password is a common breached value)
Medium=Medium (Exact match on username, email address or email sub-address)
High=High (Only requires a password match, this is the most secure and is recommended)

# Breach actions
Off=Do not perform breach detection
RecordOnly=Only record the result, take no action
NotifyUser=Notify the end user via email
RequireChange=Require immediate password change

# Connector policies
tenant.connectorPolicies.migrate=Migrate user
tenant.connectorPolicies.domains=Domains

{button}add-connector-policy=Add policy
{disabled}add-connector-policy=All of the available connectors are currently configured.

# Connector policy User action enum
Shadow=Shadow
Synchronize=Synchronize
Migrate=Migrate

# User delete policy
tenant.userDeletePolicy.unverified.enabled=Delete unverified users
tenant.userDeletePolicy.unverified.numberOfDaysToRetain=Delete after

# Webhooks
webhooks=Webhooks
webhook-settings=Webhooks
webhook-transactions=Event settings
transaction=Transaction setting
no-webhooks=No Webhooks have been configured. You can add a new Webhook configuration by navigating to <strong>Settings</strong> <i style="font-size: 10px;"  class="fa fa-chevron-right"></i> <strong>Webhooks</strong> or click <a href="/admin/webhook/">here</a>.
webhook-configured-for-all-tenants=\u0020 \u2013 All tenants

# Placeholders
{placeholder}tenant.issuer=e.g. fusionauth.io
{placeholder}tenant.usernameConfiguration.unique.separator=A single ASCII punctuation character such as #
{placeholder}tenant.scimServerConfiguration.schemas=Optionally provide your own SCIM schema, or the default schema will be created during creation

# Tooltips
{tooltip}additionalEmailHeaders=One or more line separated email headers to be added to each outgoing email. The header name and value should be separated by an equals sign, for example: X-SES-CONFIGURATION-SET=Value
{tooltip}blockedDomains=One or more line separated domains that are not allowed to register when self-service is enabled. For example, you may wish to disallow your company domain to prevent users employees using the self-service registration form, or to prevent end users from attempting to create an account using a company email address 
{tooltip}editPasswordOption=Click to modify the SMTP password, when the password field is not displayed the current password will not be modified
{tooltip}tenant.emailConfiguration.debug=When enabled SMTP and JavaMail debug information will be output to the Event Log
{tooltip}tenant.emailConfiguration.defaultFromEmail=Used when a from email address is not provided for an individual template
{tooltip}tenant.emailConfiguration.defaultFromName=Used when a from name is not provided for an individual template
{tooltip}tenant.emailConfiguration.emailUpdateEmailTemplateId=This template is used to notify a user when their email address has been updated, the email will be sent to their new and old address
{tooltip}tenant.emailConfiguration.emailVerifiedEmailTemplateId=This template is used to notify a user that their email address has been verified
{tooltip}tenant.emailConfiguration.forgotPasswordEmailTemplateId=This template is used to send a user a forgot password link or code
{tooltip}tenant.emailConfiguration.implicitEmailVerificationAllowed=When enabled, a user's email address will be implicitly marked verified when completing other email based workflows such as a password change
{tooltip}tenant.emailConfiguration.loginIdInUseOnCreateEmailTemplateId=This template is used to notify an existing user that another user has attempted to register with the same username or email
{tooltip}tenant.emailConfiguration.loginIdInUseOnUpdateEmailTemplateId=This template is used to notify an existing user that another user has attempted to change their username or email address and it conflicts with theirs
{tooltip}tenant.emailConfiguration.loginNewDeviceEmailTemplateId=This template is used to notify a user that a new device was used to login
{tooltip}tenant.emailConfiguration.loginSuspiciousEmailTemplateId=This template is used to notify a user that a login occurred and it was determined to be of interest or suspect due to the location, IP address or other factors
{tooltip}tenant.emailConfiguration.passwordUpdateEmailTemplateId=This template is used to notify a user that their password was successfully updated
{tooltip}tenant.emailConfiguration.passwordResetSuccessEmailTemplateId=This template is used to notify a user that their password was successfully updated using the reset workflow
{tooltip}tenant.emailConfiguration.passwordlessEmailTemplateId=This template is used to send the user a link for a passwordless login
{tooltip}tenant.emailConfiguration.security=Select the preferred encryption protocol used by your SMTP server, this is generally documented by your SMTP service provider
{tooltip}tenant.emailConfiguration.setPasswordEmailTemplateId=This template is used to send the user a link to set up their initial password
{tooltip}tenant.emailConfiguration.twoFactorMethodAddEmailTemplateId=This template is used to notify a user that a new two-factor method was successfully added
{tooltip}tenant.emailConfiguration.twoFactorMethodRemoveEmailTemplateId=This template is used to notify a user that a previously configured two-factor method has been removed
{tooltip}tenant.emailConfiguration.verifyEmail=When enabled, users will be required to verify their email address
{tooltip}tenant.emailConfiguration.verifyEmailWhenChanged=When enabled, users will be required to verify their email address upon update
{tooltip}tenant.emailConfiguration.verificationEmailTemplateId=This template is used to allow the user to verify their email address
{tooltip}tenant.emailConfiguration.unverified.allowEmailChangeWhenGated=Allow the user to change their email address when gated by the FusionAuth OAuth2 login workflow
{tooltip}tenant.emailConfiguration.verificationStrategy=This value indicates how you would like the user to verify their email address. \
  <p>Select <strong>Clickable link</strong> to send the user a complex code with a clickable link.</p> \
  <p>Select <strong>Form field</strong> to send the user a short code intended to be manually entered into a form field.</p>
{tooltip}tenant.emailConfiguration.unverified.behavior=Configure the desired behavior during login for a user that does not have a verified email
{tooltip}tenant.externalIdentifierConfiguration.authorizationGrantIdTimeToLiveInSeconds=The number of seconds before the OAuth2 Authorization Code is no longer valid to be used to complete a Token request. Must be greater than 0 and less than 600
{tooltip}tenant.externalIdentifierConfiguration.changePasswordIdTimeToLiveInSeconds=The number of seconds before the Change Password identifier is no longer valid to complete the Change Password request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.deviceCodeTimeToLiveInSeconds=The number of seconds before the device_code and user_code are no longer valid to be used to complete the Device Code grant. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.emailVerificationIdTimeToLiveInSeconds=The number of seconds before the Email Verification identifier is no longer valid to complete the Email Verification request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.externalAuthenticationIdTimeToLiveInSeconds=The number of seconds before the External Authentication identifier is no longer valid to complete the Authentication request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.oneTimePasswordTimeToLiveInSeconds=The number of seconds before the One Time Password identifier is no longer valid to complete a Login request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.passwordlessLoginTimeToLiveInSeconds=The number of seconds before the Passwordless Login identifier is no longer valid to complete a Login request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.pendingAccountLinkTimeToLiveInSeconds=The number of seconds before the Pending account link identifier is no longer valid to complete an account link request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.registrationVerificationIdTimeToLiveInSeconds=The number of seconds before the Registration Verification identifier is no longer valid to complete the Registration Verification request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.samlv2AuthNRequestIdTimeToLiveInSeconds=The number of seconds before the SAMLv2 AuthN request identifier is no longer valid to complete the SAMLv2 Login request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.setupPasswordIdTimeToLiveInSeconds=The number of seconds before the Setup Password identifier is no longer valid to complete the Change Password request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.trustTokenTimeToLiveInSeconds=The number of seconds before the Trust Token is no longer valid to complete a request that requires trust. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.twoFactorIdTimeToLiveInSeconds=The number of seconds before the Two-Factor identifier is no longer valid to complete a Two-Factor login request. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdTimeToLiveInSeconds=The number of seconds before the Two-Factor One Time Code used to enable or disable a two-factor method is no longer valid. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.twoFactorTrustIdTimeToLiveInSeconds=The number of seconds before the Two-Factor Trust is no longer valid and the user will be prompted for Two-Factor during login. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.webAuthnAuthenticationChallengeTimeToLiveInSeconds=The number of seconds before the WebAuthn authentication challenge is no longer valid and the user will need to restart the authentication workflow. Must be greater than 0
{tooltip}tenant.externalIdentifierConfiguration.webAuthnRegistrationChallengeTimeToLiveInSeconds=The number of seconds before the WebAuthn registration challenge is no longer valid and the user will need to restart the credential registration workflow. Must be greater than 0
{tooltip}tenant.failedAuthenticationConfiguration.actionCancelPolicy.onPasswordReset=Allow the user to unlock their account by performing a password reset workflow
{tooltip}tenant.failedAuthenticationConfiguration.emailUser=When the selected action is configured for emailing, do email the user when this action is applied
{tooltip}tenant.failedAuthenticationConfiguration.resetCountInSeconds=The window of time in seconds for which the failed authentication attempts are counted. If no further failed attempts occur the failure count will be reset after this time period starting at the time of the last failed login. Must be greater than 0
{tooltip}tenant.failedAuthenticationConfiguration.tooManyAttempts=The number of failed attempts allowed during the specified time period before the selected action is applied. Must be greater than 0
{tooltip}tenant.failedAuthenticationConfiguration.userActionId=The user action must be 'time-based' and must have 'prevent login' enabled. This action is applied after multiple failed login attempts
{tooltip}tenant.failedAuthenticationConfiguration.actionDuration=The length of time the selected action is applied to the user before the action expires at which point the user will be allowed to attempt log in again
{tooltip}tenant.familyConfiguration.allowChildRegistrations=Allow children to register themselves without requiring a parent to create their account for them
{tooltip}tenant.familyConfiguration.confirmChildEmailTemplateId=Used when a parent needs to confirm a child account before it is activated as part of their family
{tooltip}tenant.familyConfiguration.deleteOrphanedAccounts=Enable to automatically delete child user accounts that have not been verified by a parent after a configured period
{tooltip}tenant.familyConfiguration.deleteOrphanedAccountsDays=The number of days before a child account that has not yet been verified by a parent is automatically deleted
{tooltip}tenant.familyConfiguration.familyRequestEmailTemplateId=Used when children are not able to register themselves and they are asking their parent to create them an account
{tooltip}tenant.familyConfiguration.maximumChildAge=The maximum age a user can be to be considered a child
{tooltip}tenant.familyConfiguration.minimumOwnerAge=The minimum age a user must be to create a family
{tooltip}tenant.familyConfiguration.parentEmailRequired=Determines if children must provide their parent's email address during the registration process
{tooltip}tenant.familyConfiguration.parentRegistrationEmailTemplateId=Used when a child is requesting that their parent create an account (because it is not created automatically)
{tooltip}tenant.httpSessionMaxInactiveInterval=The length of time (in seconds) that an SSO session can be inactive before it is closed
{tooltip}tenant.accessControlConfiguration.uiIPAccessControlListId=The IP access control list that will be applied to this tenant.
{tooltip}tenant.issuer=The named issuer used to sign tokens, this is generally your public fully qualified domain, e.g. fusionauth.io
{tooltip}tenant.loginConfiguration.requireAuthentication=\
  This indicates how to authenticate the Login API when an applicationId is not provided.\
  <p>When enabled the Login API will always require an API key, when disabled the login API will not require an API key.</p>\
  <p>When an applicationId is provided the application configuration will take precedence. In almost all cases you will want \
  to leave this enabled to require the use of an API key.</p>
{tooltip}tenant.logoutURL=The URL that the user is taken to after they logout, this value may also be specified per application
{tooltip}tenant.maximumPasswordAge.days=The maximum number of days before a user is required to change their password. Must be greater than 0
{tooltip}tenant.maximumPasswordAge.enabled=Enable expiration of passwords after a certain period of time (in days)
{tooltip}tenant.minimumPasswordAge.enabled=Enable a minimum age (in seconds) that a user must keep the same password before changing it
{tooltip}tenant.minimumPasswordAge.seconds=The time a user must wait in seconds before changing their password after the previous change. Must be greater than 0
{tooltip}tenant.multiFactorConfiguration.email.templateId=Select an Email template to use for the Multi-Factor configuration, this template will be used to send a user an Email message during a two-factor authentication request
{tooltip}tenant.multiFactorConfiguration.sms.templateId=Select an SMS template to use for the Multi-Factor configuration, this template will be used to send a user an SMS message during a two-factor authentication request
{tooltip}tenant.multiFactorConfiguration.loginPolicy=When set to required users will be required to complete a two-factor challenge during login when the user has two-factor configured
{tooltip}tenant.oauthConfiguration.clientCredentialsAccessTokenPopulateLambdaId=Select a lambda that will be called to populate the JWT during a client credentials grant
{tooltip}tenant.passwordEncryptionConfiguration.encryptionScheme=The password encryption scheme used when creating new users if the encryption scheme is not specified and when changing a password
{tooltip}tenant.passwordEncryptionConfiguration.encryptionSchemeFactor=A non-zero number that provides an iteration count to the hashing scheme. A higher number will make the password hash more difficult to reverse engineer but will take more CPU time during login. Be careful as a high factor may cause logins to become very slow
{tooltip}tenant.passwordEncryptionConfiguration.modifyEncryptionSchemeOnLogin=When enabled the user's password hash will be modified if it does not match the configured values during next login or password change
{tooltip}tenant.passwordValidationRules.breachDetection.onLogin=Performing breach detection during login may increase the time it takes to complete authentication
{tooltip}tenant.passwordValidationRules.breachDetection.matchMode=\
  <strong>High</strong> \
  <p>Recommended. Only the password is needed to be found in order to be considered a breach. This is the most aggressive setting and \
  the most secure option. Using a known breached password makes the user very vulnerable to a brute force attack.</p> \
  <strong>Medium</strong> \
  <p>In addition to a matching password, an exact match on username, email address or email sub-address is required.</p> \
  <strong>Low</strong> \
  <p>Only an exact match of password and email or username will be considered a breach match.</p>
{tooltip}tenant.passwordValidationRules.breachDetection.notifyUserEmailTemplateId=Select an email template to be sent to the end user to notify them of a breach when 'Notify User' is selected as the action to be during login
{tooltip}tenant.passwordValidationRules.requireMixedCase=Force the user to use at least one uppercase and one lowercase character
{tooltip}tenant.passwordValidationRules.requireNonAlpha=Force the user to use at least one non-alphanumeric character
{tooltip}tenant.passwordValidationRules.requireNumber=Force the user to use at least one number
{tooltip}tenant.passwordValidationRules.rememberPreviousPasswords.enabled=Prevent a user from using the specified number of their previous passwords
{tooltip}tenant.passwordValidationRules.validateOnLogin=When enabled the user's password will be validated during login. If the password does not meet the currently configured validation rules the user will be required to change their password
{tooltip}tenant.rateLimitConfiguration.failedLogin=Rate limit the times a user can fail to login with the configured duration, if you also have configured a Failed authentication action that will take precedence
{tooltip}tenant.rateLimitConfiguration.forgotPassword=Rate limit the times a user can request a forgot password email within the configured duration
{tooltip}tenant.rateLimitConfiguration.sendEmailVerification=Rate limit the times a user can request a forgot password email within the configured duration
{tooltip}tenant.rateLimitConfiguration.sendRegistrationVerification=Rate limit the times a user can request a registration verification email within the configured duration
{tooltip}tenant.rateLimitConfiguration.sendPasswordless=Rate limit the number of times a user can request a passwordless login email within the configured duration
{tooltip}tenant.rateLimitConfiguration.sendTwoFactor=Rate limit the number of times a user can request a two-factor code via email or SMS within the configured duration
{tooltip}tenant.lambdaConfiguration.scimEnterpriseUserRequestConverterId=The Id of a SCIM User Request Lambda that will be used to convert the SCIM Enterprise User request to a FusionAuth User
{tooltip}tenant.lambdaConfiguration.scimEnterpriseUserResponseConverterId=The Id of a SCIM User Response Lambda that will be used to convert a FusionAuth User to a SCIM Enterprise Server response
{tooltip}tenant.lambdaConfiguration.scimGroupRequestConverterId=The Id of a SCIM Group Request Lambda that will be used to convert the SCIM Group request to a FusionAuth Group
{tooltip}tenant.lambdaConfiguration.scimGroupResponseConverterId=The Id of a SCIM Group Response Lambda that will be used to convert a FusionAuth Group to a SCIM Group response
{tooltip}tenant.lambdaConfiguration.scimUserRequestConverterId=The Id of a SCIM User Request Lambda that will be used to convert the SCIM User request to a FusionAuth User
{tooltip}tenant.lambdaConfiguration.scimUserResponseConverterId=The Id of a SCIM User Response Lambda that will be used to convert a FusionAuth User to a SCIM Server response
{tooltip}tenant.scimServerConfiguration.schemas=Should be JSON in the format of a SCIM Schemas endpoint response. Because the lambdas can modify the JSON response. It is important to make sure the Schemas response matches and modifications made by the lambdas
{tooltip}tenant.scimServerConfiguration.clientEntityTypeId=Select the Entity Type that will be used to represent SCIM Clients for this tenant
{tooltip}tenant.scimServerConfiguration.serverEntityTypeId=Select the Entity Type that will be used to represent the SCIM Server for this tenant
{tooltip}tenant.themeId=The selected theme will be used to style the login page and other end user templates
{tooltip}tenant.userDeletePolicy.unverified.enabled=Enable to automatically delete users that have not completed email verification after a configured period
{tooltip}tenant.userDeletePolicy.unverified.numberOfDaysToRetain=The number of days before a user with an unverified email is automatically deleted
{tooltip}tenant.formConfiguration.adminUserFormId=The selected form will be used when adding or editing a user within the FusionAuth admin UI

{tooltip}tenant.connectorPolicies.migrate=Select whether or not the user is migrated from the Connector into FusionAuth so that future authentications will use FusionAuth and not the Connector.
{tooltip}tenant.connectorPolicies.domains=Specify one or more line separated domains to be used to filter incoming authentication requests to utilize this connector. To match all incoming email addresses, specify a single entry using an asterisk (*).

{tooltip}tenant.captchaConfiguration.captchaMethod=The type of Captcha to use
{tooltip}tenant.captchaConfiguration.secretKey=The secret key for this captcha service
{tooltip}tenant.captchaConfiguration.siteKey=The site key for this captcha service
{tooltip}tenant.captchaConfiguration.threshold=The threat score threshold for this captcha if required, if it is not used by this captcha service then the value will be ignored

{tooltip}tenant.usernameConfiguration.unique.enabled=When enabled FusionAuth will handle username collisions by generating a random suffix
{tooltip}tenant.usernameConfiguration.unique.numberOfDigits=The maximum number of digits to use when building a unique suffix for a username, a number will be randomly selected and may be 1 or more digits up to this configured value
{tooltip}tenant.usernameConfiguration.unique.strategy=When set to Always, a unique suffix will be appended to every username even when the requested username has not yet been used, when set to On Collision, a suffix will only be appended when the username is already in use
{tooltip}tenant.usernameConfiguration.unique.separator=A single character to use as a separator from the requested username and a unique suffix added when a duplicate username is detected, this value can be a single ASCII punctuation character that is not A-Z, a-z, or 0-9

{tooltip}tenant.webAuthnConfiguration.bootstrapWorkflow.authenticatorAttachmentPreference=\
  <strong>Any</strong> \
  <p>Recommended. Authenticators with either attachment modality will be accepted.</p> \
  <strong>Platform</strong> \
  <p>Authenticators must be integrated with client device. They cannot be used with other devices. \
  Examples: phone/laptop fingerprint sensor, Face ID.</p> \
  <strong>Cross-platform</strong> \
  <p>Authenticators must be removable from the client device. They can be used with other devices. Examples: security key, mobile phone attached via Bluetooth.</p>
{tooltip}tenant.webAuthnConfiguration.reauthenticationWorkflow.authenticatorAttachmentPreference=\
  <strong>Any</strong> \
  <p>Authenticators with either attachment modality will be accepted.</p> \
  <strong>Platform</strong> \
  <p>Recommended. Authenticators must be integrated with client device. They cannot be used with other devices. \
  Examples: phone/laptop fingerprint sensor, Face ID.</p> \
  <strong>Cross-platform</strong> \
  <p>Authenticators must be removable from the client device. They can be used with other devices. Examples: security key, mobile phone attached via Bluetooth.</p>
{tooltip}tenant.webAuthnConfiguration.userVerificationRequirement=\
  <strong>Required</strong> \
  <p>Recommended. Authenticators must require user verification via PIN or biometric scan.</p> \
  <strong>Preferred</strong> \
  <p>Authenticators should provide user verification if available, but authenticators without user verification are allowed.</p> \
  <strong>Discouraged</strong> \
  <p>Authenticators should not require user verification.</p>

{tooltip}tenant.webAuthnConfiguration.debug=Enable debug to create an event log to assist you in debugging integration errors
{tooltip}tenant.webAuthnConfiguration.relyingPartyId=The Id is used to scope credentials to a particular relying party. The value must be the caller's origin's effective domain or a registrable domain suffix thereof. Defaults to caller's origin's effective domain
{tooltip}tenant.webAuthnConfiguration.relyingPartyName=The relying party name will be displayed to a user during WebAuthn ceremonies, defaults to the tenant issuer

{tooltip}tenant.ssoConfiguration.deviceTrustTimeToLiveInSeconds=The number of seconds before a trusted device is reset, the user is forced to complete CAPTCHA again
{tooltip}webhook-settings=The checked webhooks are enabled for this tenant or are defined as global


# Base errors
[duplicate]tenantId=Already exists
[blank]tenant.name=Required
[duplicate]tenant.name=Already exists

[couldNotConvert]tenant.logoutURL=Invalid URL
[invalidURL]tenant.logoutURL=Invalid URL
[couldNotConvert]tenant.httpSessionMaxInactiveInterval=Invalid number

# Email configuration errors
[blank]tenant.emailConfiguration.host=Required
[couldNotConvert]tenant.emailConfiguration.port=Invalid
[invalid]tenant.emailConfiguration.port=Invalid
[missing]tenant.emailConfiguration.port=Required
[missing]tenant.emailConfiguration.verificationEmailTemplateId=Required
[invalid]tenant.emailConfiguration.forgotPasswordEmailTemplateId=Invalid
[invalid]tenant.emailConfiguration.setPasswordEmailTemplateId=Invalid
[invalid]tenant.emailConfiguration.verificationEmailTemplateId=Invalid

# External Identifiers errors
[invalid]tenant.externalIdentifierConfiguration.authorizationGrantIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.changePasswordIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.deviceCodeTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.emailVerificationIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.externalAuthenticationIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.oneTimePasswordTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.passwordlessLoginTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.registrationVerificationIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.samlv2AuthNRequestIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.setupPasswordIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.trustTokenTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.twoFactorIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.twoFactorTrustIdTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.webAuthnAuthenticationChallengeTimeToLiveInSeconds=Invalid number
[invalid]tenant.externalIdentifierConfiguration.webAuthnRegistrationChallengeTimeToLiveInSeconds=Invalid number

[missing]tenant.externalIdentifierConfiguration.changePasswordIdGenerator.length=Required
[missing]tenant.externalIdentifierConfiguration.changePasswordIdGenerator.type=Required
[invalidBytes]tenant.externalIdentifierConfiguration.changePasswordIdGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.changePasswordIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.changePasswordIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.changePasswordIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

[missing]tenant.externalIdentifierConfiguration.emailVerificationIdGenerator.length=Required
[missing]tenant.externalIdentifierConfiguration.emailVerificationOneTimeCodeGenerator.length=Required

[invalidBytes]tenant.externalIdentifierConfiguration.emailVerificationIdGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.emailVerificationIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.emailVerificationIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.emailVerificationIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

[invalidBytes]tenant.externalIdentifierConfiguration.emailVerificationOneTimeCodeGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.emailVerificationOneTimeCodeGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.emailVerificationOneTimeCodeGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.emailVerificationOneTimeCodeGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

[missing]tenant.externalIdentifierConfiguration.passwordlessLoginGenerator.length=Required
[missing]tenant.externalIdentifierConfiguration.passwordlessLoginGenerator.type=Required
[invalidBytes]tenant.externalIdentifierConfiguration.passwordlessLoginGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.passwordlessLoginGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.passwordlessLoginGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.passwordlessLoginGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

[missing]tenant.externalIdentifierConfiguration.registrationVerificationIdGenerator.length=Required
[missing]tenant.externalIdentifierConfiguration.registrationVerificationIdGenerator.type=Required
[invalidBytes]tenant.externalIdentifierConfiguration.registrationVerificationIdGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.registrationVerificationIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.registrationVerificationIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.registrationVerificationIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

[invalidBytes]tenant.externalIdentifierConfiguration.registrationVerificationOneTimeCodeGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.registrationVerificationOneTimeCodeGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.registrationVerificationOneTimeCodeGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.registrationVerificationOneTimeCodeGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

[missing]tenant.externalIdentifierConfiguration.setupPasswordIdGenerator.length=Required
[missing]tenant.externalIdentifierConfiguration.setupPasswordIdGenerator.type=Required
[invalidBytes]tenant.externalIdentifierConfiguration.setupPasswordIdGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.setupPasswordIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.setupPasswordIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.setupPasswordIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

[missing]tenant.externalIdentifierConfiguration.deviceUserCodeIdGenerator.length=Required
[missing]tenant.externalIdentifierConfiguration.deviceUserCodeIdGenerator.type=Required
[invalidBytes]tenant.externalIdentifierConfiguration.deviceUserCodeIdGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.deviceUserCodeIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.deviceUserCodeIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.deviceUserCodeIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

[missing]tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdGenerator.length=Required
[missing]tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdGenerator.type=Required
[invalidBytes]tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdGenerator.length=Must be greater than or equal to 16 and less than or equal to 128
[invalidDigits]tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlpha]tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12
[invalidAlphaNumeric]tenant.externalIdentifierConfiguration.twoFactorOneTimeCodeIdGenerator.length=Must be greater than or equal to 4 and less than or equal to 12

# Failed Authentication Configuration Errors
[tooSmall]tenant.failedAuthenticationConfiguration.tooManyAttempts=Invalid number
[tooSmall]tenant.failedAuthenticationConfiguration.resetCountInSeconds=Invalid number
[couldNotConvert]tenant.failedAuthenticationConfiguration.tooManyAttempts=Invalid number
[couldNotConvert]tenant.failedAuthenticationConfiguration.resetCountInSeconds=Invalid number
[tooSmall]tenant.failedAuthenticationConfiguration.actionDuration=Invalid number
[couldNotConvert]tenant.failedAuthenticationConfiguration.actionDuration=Invalid number

# Family errors
[couldNotConvert]tenant.familyConfiguration.deleteOrphanedAccountsDays=Invalid
[couldNotConvert]tenant.familyConfiguration.maximumChildAge=Invalid
[couldNotConvert]tenant.familyConfiguration.minimumOwnerAge=Invalid
[invalid]tenant.familyConfiguration.deleteOrphanedAccountsDays=Must be greater than 0
[invalid]tenant.familyConfiguration.maximumChildAge=Must be greater than 0
[invalid]tenant.familyConfiguration.minimumOwnerAge=Must be greater than 0
[tooSmall]tenant.familyConfiguration.minimumOwnerAge=Too small

[invalid]tenant.multiFactorConfiguration.loginPolicy=You must enable Authenticator, Email or SMS when setting this policy to Enabled or Required

# Password errors
[couldNotConvert]tenant.maximumPasswordAge.days=Invalid number
[tooSmall]tenant.maximumPasswordAge.days=Invalid number
[missing]tenant.maximumPasswordAge.days=Required
[couldNotConvert]tenant.minimumPasswordAge.seconds=Invalid number
[missing]tenant.minimumPasswordAge.seconds=Required
[tooSmall]tenant.minimumPasswordAge.seconds=Invalid number
[invalid]tenant.passwordEncryptionConfiguration.encryptionScheme=Invalid scheme
[invalid]tenant.passwordEncryptionConfiguration.encryptionSchemeFactor=Invalid number

# Password Validation settings errors
[couldNotConvert]tenant.passwordValidationRules.rememberPreviousPasswords.count=Invalid number
[tooSmall]tenant.passwordValidationRules.rememberPreviousPasswords.count=Invalid number
[tooLong]tenant.passwordValidationRules.rememberPreviousPasswords.count=Invalid number

[couldNotConvert]tenant.passwordValidationRules.minLength=Invalid number
[tooSmall]tenant.passwordValidationRules.minLength=Must be greater than 0
[couldNotConvert]tenant.passwordValidationRules.maxLength=Invalid number
[tooSmall]tenant.passwordValidationRules.maxLength=Must be greater than the minimum length

# Breach detection errors
[notLicensed]tenant.passwordValidationRules.breachDetection.enabled=Reactor license required
[missing]tenant.passwordValidationRules.breachDetection.notifyUserEmailTemplateId=Required
[invalid]tenant.passwordValidationRules.breachDetection.notifyUserEmailTemplateId=Invalid
[notLicensed]tenant.eventConfiguration.events['UserPasswordBreach'].enabled=Reactor license required

# SCIM
[invalid]scimSchemas=Invalid JSON
[notLicensedFor]tenant.scimServerConfiguration.enabled=SCIM Server feature required

[type]tenant.lambdaConfiguration.scimEnterpriseUserRequestConverterId=A lambda type of SCIMServerEnterpriseUserRequestConverter is required
[type]tenant.lambdaConfiguration.scimEnterpriseUserResponseConverterId=A lambda type of SCIMServerEnterpriseUserResponseConverter is required
[type]tenant.lambdaConfiguration.scimGroupRequestConverterId=A lambda type of SCIMServerGroupRequestConverter is required
[type]tenant.lambdaConfiguration.scimGroupResponseConverterId=A lambda type of SCIMServerGroupResponseConverter is required
[type]tenant.lambdaConfiguration.scimUserRequestConverterId=A lambda type of SCIMServerUserRequestConverter is required
[type]tenant.lambdaConfiguration.scimUserResponseConverterId=A lambda type of SCIMServerUserResponseConverter is required

# Threat detection feature required
[notLicensedFor]tenant.accessControlConfiguration.uiIPAccessControlListId=Threat Detection feature required
[notLicensedFor]blockedDomains=Threat Detection feature required
[notLicensedFor]tenant.captchaConfiguration.enabled=Threat Detection feature required

[notLicensedFor]tenant.emailConfiguration.loginIdInUseOnCreateEmailTemplateId=Threat Detection feature required
[notLicensedFor]tenant.emailConfiguration.loginIdInUseOnUpdateEmailTemplateId=Threat Detection feature required
[notLicensedFor]tenant.emailConfiguration.loginNewDeviceEmailTemplateId=Threat Detection feature required
[notLicensedFor]tenant.emailConfiguration.loginSuspiciousEmailTemplateId=Threat Detection feature required
[notLicensedFor]tenant.emailConfiguration.passwordResetSuccessEmailTemplateId=Threat Detection feature required
[notLicensedFor]tenant.emailConfiguration.passwordUpdateEmailTemplateId=Threat Detection feature required
[notLicensedFor]tenant.emailConfiguration.twoFactorMethodAddEmailTemplateId=Threat Detection feature required
[notLicensedFor]tenant.emailConfiguration.twoFactorMethodRemoveEmailTemplateId=Threat Detection feature required

[notLicensedFor]tenant.eventConfiguration.events['UserLoginIdDuplicateOnCreate'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserLoginIdDuplicateOnUpdate'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserLoginNewDevice'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserLoginSuspicious'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserPasswordUpdate'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserPasswordResetSuccess'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserPasswordResetStart'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserPasswordResetSend'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserTwoFactorMethodRemove'].enabled=Threat Detection feature required
[notLicensedFor]tenant.eventConfiguration.events['UserTwoFactorMethodAdd'].enabled=Threat Detection feature required

# Connector policies errors
[empty]tenant.connectorPolicies.domains=Required

# This is rendered as a general error
[notLicensed]tenant.connectorPolicies.connectorId=A Reactor license is required to utilize connectors.
[invalid]tenant.connectorPolicies=Somehow you managed to delete the FusionAuth Connector. This is a bug. Please report this to FusionAuth when you have a sec. Thanks!

# JWT Configuration errors
[invalid]tenant.jwtConfiguration.accessTokenKeyId=Invalid
[invalid]tenant.jwtConfiguration.idTokenKeyId=Invalid
[couldNotConvert]tenant.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Invalid number
[missing]tenant.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Required
[tooSmall]tenant.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Invalid number
[couldNotConvert]tenant.jwtConfiguration.timeToLiveInSeconds=Invalid number
[tooSmall]tenant.jwtConfiguration.timeToLiveInSeconds=Invalid number

# Rate limiting errors
[invalid]tenant.rateLimitConfiguration.failedLogin.limit=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.forgotPassword.limit=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.sendEmailVerification.limit=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.sendRegistrationVerification.limit=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.sendPasswordless.limit=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.sendTwoFactor.limit=Must be greater than 0

[invalid]tenant.rateLimitConfiguration.failedLogin.timePeriodInSeconds=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.forgotPassword.timePeriodInSeconds=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.sendEmailVerification.timePeriodInSeconds=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.sendRegistrationVerification.timePeriodInSeconds=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.sendPasswordless.timePeriodInSeconds=Must be greater than 0
[invalid]tenant.rateLimitConfiguration.sendTwoFactor.timePeriodInSeconds=Must be greater than 0

[notLicensedFor]tenant.rateLimitConfiguration.failedLogin.enabled=Threat Detection feature required
[notLicensedFor]tenant.rateLimitConfiguration.forgotPassword.enabled=Threat Detection feature required
[notLicensedFor]tenant.rateLimitConfiguration.sendEmailVerification.enabled=Threat Detection feature required
[notLicensedFor]tenant.rateLimitConfiguration.sendRegistrationVerification.enabled=Threat Detection feature required
[notLicensedFor]tenant.rateLimitConfiguration.sendPasswordless.enabled=Threat Detection feature required
[notLicensedFor]tenant.rateLimitConfiguration.sendTwoFactor.enabled=Threat Detection feature required

# Device trust settings
[invalid]tenant.ssoConfiguration.deviceTrustTimeToLiveInSeconds=Must be greater than 0

# Username config
[invalid]tenant.usernameConfiguration.unique.separator=Invalid. Enter a single ASCII punctuation character, such as, but not limited to #, $, &, @, ?, or +

# WebAuthn
[notLicensed]tenant.webAuthnConfiguration.enabled=WebAuthn feature required

[notLicensedFor]tenant.webAuthnConfiguration.enabled=WebAuthn feature required
[notLicensedFor]tenant.webAuthnConfiguration.bootstrapWorkflow.authenticatorAttachmentPreference=WebAuthn feature with cross-platform authenticators required
[notLicensedFor]tenant.webAuthnConfiguration.reauthenticationWorkflow.authenticatorAttachmentPreference=WebAuthn feature with cross-platform authenticators required

# User delete policy errors
[tooSmall]tenant.userDeletePolicy.unverified.numberOfDaysToRetain=Invalid number

# Exceptions
[NotFoundException]=That tenant has already been deleted. Refresh your browser.
