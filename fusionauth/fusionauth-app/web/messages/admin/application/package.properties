#
# Copyright (c) 2018-2023, FusionAuth, All Rights Reserved
#

# Messages
add-role=Add Role
applicationId=Id
application.name=Name
application.cleanSpeakConfiguration.applicationIds=CleanSpeak Applications
application.cleanSpeakConfiguration.usernameModeration.enabled=Enable Username Moderation
application.cleanSpeakConfiguration.usernameModeration.applicationId=CleanSpeak Application

clean-speak-settings.description=Selecting CleanSpeak applications from the provided list allows you to associate this FusionAuth application to multiple applications in CleanSpeak. If this FusionAuth application maps to a single application in CleanSpeak, do not select any applications here. The application Id in FusionAuth will be expected to be the same as the application Id in CleanSpeak. Please review the troubleshooting guide found in the documentation for \
assistance and the available support channels.

clean-speak-down-or-has-no-applications=Either your CleanSpeak server is not reachable or it doesn't have any Applications configured. If your CleanSpeak applications have been configured, verify your CleanSpeak settings in the System Settings.
clean-speak-mapping-info=This configuration is used to properly handle notifications originating from one of the selected CleanSpeak applications.
clean-speak-not-enabled=The CleanSpeak integration is not enabled. To enable username moderation for this application, enable and configure the <a href="/admin/integration/cleanspeak">CleanSpeak Integration</a>.
clean-speak-settings=CleanSpeak Settings
delete-role=Delete Role
edit-role=Edit Role
manage-roles=Manage Roles
manage-oauth=Manage Oauth
no-clean-speak-application-ids=No CleanSpeak Application Ids configured. Click "Add Row" to add one.
registration-fields=Registration fields
none-selected-use-tenant-theme=No theme selected. The tenant configuration will be used.
webhooks=Webhooks
webhookIds=Webhooks

# Email
email=Email
template-settings=Templates

none-selected-use-tenant=No template selected. The tenant configuration will be used.

application.emailConfiguration.emailUpdateEmailTemplateId=Email update
application.emailConfiguration.emailVerificationEmailTemplateId=Email verification
application.emailConfiguration.emailVerifiedEmailTemplateId=Email verified
application.emailConfiguration.forgotPasswordEmailTemplateId=Forgot password
application.emailConfiguration.loginIdInUseOnCreateEmailTemplateId=Login Id duplicate on create
application.emailConfiguration.loginIdInUseOnUpdateEmailTemplateId=Login Id duplicate on update
application.emailConfiguration.loginNewDeviceEmailTemplateId=Login with new device
application.emailConfiguration.loginSuspiciousEmailTemplateId=Suspicious login
application.emailConfiguration.passwordUpdateEmailTemplateId=Password update
application.emailConfiguration.twoFactorMethodAddEmailTemplateId=Two-factor method added
application.emailConfiguration.twoFactorMethodRemoveEmailTemplateId=Two-factor method removed
application.emailConfiguration.passwordlessEmailTemplateId=Passwordless login
application.emailConfiguration.passwordResetSuccessEmailTemplateId=Password reset success
application.emailConfiguration.setPasswordEmailTemplateId=Setup password

external-identifiers-duration=External identifier durations
application.externalIdentifierConfiguration.twoFactorTrustIdTimeToLiveInSeconds=Two-Factor trust

# OAuth
oauth-settings=OAuth 2.0 Settings
oauth-settings-description=Once you have saved your Application, you can click the view icon <a style="pointer-events: none;" class="small-square green button"><i class="fa fa-search"></i></a> to see the \
  IdP URLs that most service providers will need configured to login with FusionAuth.
oauth.redirectURLs=Authorized redirect URLs
oauth.origin=Authorized request origin URLs
oauth.clientAuthenticationPolicy=Client Authentication
oauth.clientId=Client Id
oauth.clientSecret=Client secret
oauth.logoutBehavior=Logout behavior
oauth.logoutURL=Logout URL
oauth.proofKeyForCodeExchangePolicy=PKCE
oauth.deviceVerificationURL=Device verification URL

application.oauthConfiguration.clientId=Client Id
application.oauthConfiguration.clientSecret=Client secret
application.oauthConfiguration.debug=Debug enabled
application.oauthConfiguration.enabledGrants=Enabled grants
application.oauthConfiguration.generateRefreshTokens=Generate refresh tokens
application.oauthConfiguration.authorizedURLValidationPolicy=URL validation
application.oauthConfiguration.requireClientAuthentication=Require authentication
application.oauthConfiguration.requireRegistration=Require registration

ExactMatch=Exact match
AllowWildcards=Allow wildcards

# OAuth policy configurations
ClientAuthenticationPolicy.Required=Required
ClientAuthenticationPolicy.NotRequired=Not required
ClientAuthenticationPolicy.NotRequiredWhenUsingPKCE=Not required when using PKCE

ProofKeyForCodeExchangePolicy.Required=Required
ProofKeyForCodeExchangePolicy.NotRequired=Not required
ProofKeyForCodeExchangePolicy.NotRequiredWhenUsingClientAuthentication=Not required when using client authentication

# Lambda Configuration
application.lambdaConfiguration.accessTokenPopulateId=Access Token populate lambda
application.lambdaConfiguration.idTokenPopulateId=Id Token populate lambda
application.lambdaConfiguration.samlv2PopulateId=Populate lambda
application.lambdaConfiguration.selfServiceRegistrationValidationId=Self-service registration validation

# Multi-factor settings
mfa-settings=Multi-Factor authentication settings

# OAuth2 Grants
authorization_code=Authorization Code
client_credentials=Client Credentials
device_code=Device
implicit=Implicit
refresh_token=Refresh token
password=Password

# Registration & Email Configuration
registration-verification-settings=Registration verification settings
application.verificationEmailTemplateId=Verification template
application.verifyRegistration=Verify registrations

none-selected-email-template-default=No template selected. System configured template will be used.
no-email-templates=No email templates defined. You must create email templates to enable email verification and forgot password handling.
no-email-templates-available-registration-validation=No email template defined. You must create an email template to enable Registration verification.

# JWT Configuration
jwt=JWT
jwt-settings=JSON web token settings
refresh-token-settings=Refresh token settings
jwt-settings-description=This is the application specific configuration for the JSON Web Token signing algorithm and related settings. This configuration is optional and may be left un-configured. If no JWT configuration is provided for this application the JWT signing algorithm and related settings specified in the Tenant configuration will be used to sign and verify tokens for this application.

custom-claim-configuration=Lambda settings

application.jwtConfiguration.enabled=Enabled
application.jwtConfiguration.accessTokenKeyId=Access token signing key
application.jwtConfiguration.idTokenKeyId=Id token signing key
application.jwtConfiguration.issuer=Issuer
application.jwtConfiguration.refreshTokenExpirationPolicy=Refresh token expiration
application.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Refresh token duration
application.jwtConfiguration.refreshTokenUsagePolicy=Refresh token usage
application.jwtConfiguration.timeToLiveInSeconds=JWT duration

form-settings=Form settings
# Registration configuration
registration-settings=Self-service registration
application.registrationConfiguration.enabled=Enabled
application.registrationConfiguration.confirmPassword=Confirm password
application.registrationConfiguration.loginIdType=Login type
application.registrationConfiguration.birthDate=Birthdate
application.registrationConfiguration.firstName=First name
application.registrationConfiguration.fullName=Full name
application.registrationConfiguration.lastName=Last name
application.registrationConfiguration.middleName=Middle name
application.registrationConfiguration.mobilePhone=Mobile phone


application.registrationConfiguration.formId=Form
application.registrationConfiguration.type=Type
application.formConfiguration.adminRegistrationFormId=Admin Registration
application.formConfiguration.selfServiceFormId=User Self-service
application.verificationStrategy=Verification strategy

select-form=Select a form\u2026

none-selected-self-service-user-empty=Feature disabled. No form selected.

# Security settings
access-control-lists-settings=Access control lists settings
application.accessControlConfiguration.uiIPAccessControlListId=Access control list
none-selected-access-control-list-use-tenant=No Access Control List selected. The tenant configuration will be used.

# Form types
basic=Basic
advanced=Advanced

# Security Configuration
application.authenticationTokenConfiguration.enabled=Enabled

# Login Settings
login-settings=Login API settings
application.loginConfiguration.allowTokenRefresh=Enable JWT refresh
application.loginConfiguration.generateRefreshTokens=Generate refresh tokens
application.loginConfiguration.requireAuthentication=Require an API key

authentication-token-settings=Authentication tokens

# Multi-Factor configuration
application.multiFactorConfiguration.email.templateId=Email template
application.multiFactorConfiguration.sms.templateId=SMS template
application.multiFactorConfiguration.loginPolicy=On login policy
application.multiFactorConfiguration.trustPolicy=Trust policy

# Passwordless Settings
passwordless-settings=Passwordless login
application.passwordlessConfiguration.enabled=Enabled

# SAML v2
generate-signing-key=Auto generate a new key on save\u2026
use-primary-signing-key=Use authentication response signing key\u2026
select-signing-key=Select a signing key\u2026

select-verification-key=Select a verification key\u2026

saml-authn-request=Authentication request
saml-authn-response=Authentication response
saml-logout-request=Logout request
saml-logout-response=Logout response
saml-response=Response

application.samlv2Configuration.debug=Debug enabled
application.samlv2Configuration.audience=Audience
application.samlv2Configuration.authorizedRedirectURLs=Authorized redirect URLs
application.samlv2Configuration.defaultVerificationKeyId=Default verification key
application.samlv2Configuration.enabled=Enabled
application.samlv2Configuration.issuer=Issuer
application.samlv2Configuration.initiatedLogin.enabled=Enable IdP initiated login
application.samlv2Configuration.initiatedLogin.nameIdFormat=NameID format
application.samlv2Configuration.keyId=Signing key
application.samlv2Configuration.logoutURL=Logout URL
application.samlv2Configuration.requireSignedRequests=Require signature
application.samlv2Configuration.logout.singleLogout.enabled=Enable single logout
application.samlv2Configuration.logout.singleLogout.url=Logout URL
application.samlv2Configuration.xmlSignatureC14nMethod=Signature canonicalization method
application.samlv2Configuration.xmlSignatureLocation=Signature location
application.samlv2Configuration.logout.keyId=Signing key
application.samlv2Configuration.logout.requireSignedRequests=Require signature
application.samlv2Configuration.logout.defaultVerificationKeyId=Default verification key
application.samlv2Configuration.logout.singleLogout.keyId=Signing key
application.samlv2Configuration.logout.behavior=Logout behavior

application.samlv2Configuration.logout.singleLogout.xmlSignatureC14nMethod=Signature canonicalization method
application.samlv2Configuration.logout.xmlSignatureC14nMethod=Signature canonicalization method

# Registration delete policy
application.registrationDeletePolicy.unverified.enabled=Delete unverified registrations
application.registrationDeletePolicy.unverified.numberOfDaysToRetain=Delete after

# Theme
application.themeId=Theme

application.unverified.behavior=Unverified behavior

# WebAuthn
webauthn-bootstrap-settings=Bootstrap settings
webauthn-reauthentication-settings=Re-authentication settings

application.webAuthnConfiguration.enabled=Enabled
application.webAuthnConfiguration.bootstrapWorkflow.enabled=Enabled
application.webAuthnConfiguration.reauthenticationWorkflow.enabled=Enabled

# Placeholders
{placeholder}application.oauth.clientId=Value will be initialized during creation. This value is not user modifiable
{placeholder}application.samlv2Configuration.audience=Defaults to the same value as issuer

# Descriptions
{description}access-control-lists-settings=An Access Control List, often referred to as an ACL allows you to restrict \
  access to FusionAuth. Optionally configure an IP Access Control List to restrict end user access by IP address.

{description}authentication-token-settings=Allow users to optionally authenticate using an Application \
  specific token in place of their password. This should only be used when the security requirements are low and the user's normal password \
  is not a good option for authentication. For example, if a password needs to be stored in an external configuration and the exposure risk \
  is low, a token can be used in place of the user's password. This token may only be used for authorization for this application.

{description}external-identifiers=The primary configuration for these identifiers is found in Tenant configuration under the Advanced tab. When a value is defined, \
  it will override the tenant configuration. The current tenant configuration value is displayed in the placeholder text.

{description}passwordless-settings=Allow users to request login using a link sent via email. Enabling this feature will cause a button to be \
  displayed on the FusionAuth login form and allow you to utilize the Passwordless Login API.

{description}login-settings=The Login API settings allow you to control access to the Login API and limit the capability for users in this Application. This configuration will not affect authentication via OAuth grants.
{description}registration-settings=Self-service registration will allow users to self register using the FusionAuth login page. \
 If the user does not yet exist, the user will be created and registered in one step, if a user already exists but has not yet registered, \
 the user will be automatically prompted to register after a successful authentication.
{description}form-settings=Admin registration forms can be used to define the fields that are available to edit for a user from the Edit Registrations page.

{description}jwt-settings=These are the application specific configurations for the JSON web token settings.
{description}refresh-token-settings=These are the application specific configurations for the refresh token settings.
{description}multi-factor-settings=This is the application specific multi-factor configuration. When configured, the application specific settings will be used instead of the tenant configuration.

{description}samlv2-settings=This enables this application as a SAML v2 identity provider. \
  Once you have saved your Application, you can click the view icon <a style="pointer-events: none;" class="small-square green button"><i class="fa fa-search"></i></a> to see the \
  SAML v2 integration details which will include the IdP URLs that most service providers will need configured to login with FusionAuth.
{description}saml-authn-request=These settings define how FusionAuth will handle incoming authentication requests from a service provider.
{description}saml-authn-response=These settings are used to build the authentication response to the service provider.
{description}saml-logout-request=These settings are used to define how FusionAuth will handle incoming logout requests from a service provider. When Single Logout is enabled additional settings are available that will be used to sign the Logout Request sent to session participants.
{description}saml-logout-response=These settings are used to build the logout response sent to the originating session participant, or service provider.

{description}template-settings=This is the application specific email template configuration. When configured, the application specific template will be used instead of the tenant configured template when possible. This may provide you the option to send a specific template based upon the FusionAuth application.
{description}webauthn-settings=This is the application specific configurations for WebAuthn. This configuration is optional and may be left disabled. When disabled the tenant configuration will be used, when enabled this configuration will take precedence over the tenant configuration. 
{description}webauthn-bootstrap-settings=Enable to allow users to authenticate on personal devices using a passkey after identifying themselves (e.g. with username or email). This workflow can be used to authenticate from a new device using WebAuthn.
{description}webauthn-reauthentication-settings=Enable to allow users to re-authenticate on personal devices using WebAuthn.

# Tooltips
{tooltip}application.accessControlConfiguration.uiIPAccessControlListId=The IP access control list that will be applied to this application
{tooltip}application.verificationStrategy=This value indicates how you would like the user to verify their registration. \
  <p>Select <strong>Clickable link</strong> to send the user a complex code with a clickable link.</p> \
  <p>Select <strong>Form field</strong> to send the user a short code intended to be manually entered into a form field.</p>
# Email
{tooltip}application.emailConfiguration.loginIdInUseOnCreateEmailTemplateId=This template is used when a user updates their email address to notify them of the change
{tooltip}application.emailConfiguration.loginIdInUseOnUpdateEmailTemplateId=This template is used when a user updates their email address to notify them of the change
{tooltip}application.emailConfiguration.passwordUpdateEmailTemplateId=This template is used when a user updates their email address to notify them of the change
{tooltip}application.emailConfiguration.twoFactorMethodAddEmailTemplateId=This template is used when a user updates their email address to notify them of the change
{tooltip}application.emailConfiguration.twoFactorMethodRemoveEmailTemplateId=This template is used when a user updates their email address to notify them of the change
{tooltip}application.emailConfiguration.emailUpdateEmailTemplateId=This template is used when a user updates their email address to notify them of the change
{tooltip}application.emailConfiguration.emailVerificationEmailTemplateId=This template is used to allow the user to verify their email address
{tooltip}application.emailConfiguration.emailVerifiedEmailTemplateId=This template is used to notify a user when their email address has been verified
{tooltip}application.emailConfiguration.forgotPasswordEmailTemplateId=This template is used to send a user a forgot password link or code
{tooltip}application.emailConfiguration.loginNewDeviceEmailTemplateId=This template is used to notify a user that a new device was used to login
{tooltip}application.emailConfiguration.loginSuspiciousEmailTemplateId=This template is used to notify a user that a login occurred and it was determined to be of interest or suspect due to the location, IP address or other factors
{tooltip}application.emailConfiguration.passwordlessEmailTemplateId=This template is used to send the user a link for a passwordless login
{tooltip}application.emailConfiguration.passwordResetSuccessEmailTemplateId=This template is used to notify a user that their password was successfully updated using the reset workflow
{tooltip}application.emailConfiguration.setPasswordEmailTemplateId=This template is used to send the user a link to set up their initial password
{tooltip}application.externalIdentifierConfiguration.twoFactorTrustIdTimeToLiveInSeconds=The number of seconds before the Two-Factor Trust is no longer valid and the user will be prompted for Two-Factor during login. When undefined, the tenant configuration will be used.
{tooltip}oauth.clientAuthenticationPolicy=The rule that indicates if client authentication is required to access the Token endpoint
{tooltip}oauth.logoutURL=The Application specific logout URL, if not defined the global value will be used
{tooltip}oauth.logoutBehavior=When set to Redirect only, the logout request will only end your SSO session and redirect. When set to All applications, the logout request will end your SSO session, make a GET request to each Application and Tenant Logout URL if defined and then redirect
{tooltip}oauth.origin=All origins are allowed unless specific origins are defined
{tooltip}oauth.proofKeyForCodeExchangePolicy=The rule that indicates when PKCE is required when using the authorization code grant
{tooltip}oauth.redirectURLs=One or more allowed URLs that the OAuth grant workflow may redirect to upon completion
{tooltip}oauth.deviceVerificationURL=The Application specific device verification URL for the user-interaction of the Device Authorization Grant.  This field is required when the Device grant has been enabled

# Forms
{tooltip}application.formConfiguration.adminRegistrationFormId=The selected form will be used when adding or editing a user registration within the FusionAuth admin UI
{tooltip}application.formConfiguration.selfServiceFormId=The selected form will be used to enable authenticated users to manage their profile on the account page

{tooltip}application.multiFactorConfiguration.email.templateId=Select an Email template to use for the Multi-Factor configuration, this template will be used to send a user an Email message during a two-factor authentication request
{tooltip}application.multiFactorConfiguration.sms.templateId=Select an SMS template to use for the Multi-Factor configuration, this template will be used to send a user an SMS message during a two-factor authentication request

# JWT Configuration
{tooltip}application.verificationEmailTemplateId=This email template will be sent to the User to verify registration
{tooltip}application.verifyRegistration=Enable to request FusionAuth verify User registrations. This allows the User to confirm they intended to register for the Application

{tooltip}application.oauthConfiguration.debug=Enable debug to create an event log to assist you in debugging integration errors
{tooltip}application.oauthConfiguration.generateRefreshTokens=Controls if refresh tokens are returned from the Token endpoint if the OAuth offline_access scope is requested
{tooltip}application.oauthConfiguration.authorizedURLValidationPolicy=\
  <strong>Exact match</strong> \
  <p>The requested <code>redirect_uri</code> must exactly match one of the configured authorized redirect URIs. \
  This is the default setting and the recommended configuration.</p> \
  <p>When authorized origin URLs are configured, the value found in the <code>Origin</code> header must exactly match \
  one of the configured authorized origin URIs.</p> \
  <strong>Allow wildcards</strong> \
  <p>The requested <code>redirect_uri</code> can either exactly match one of the configured authorized redirect URIs, \
  or match one of the configured patterns. Use this configuration with caution.</p> \
  <p>When authorized origin URLs are configured, the value found in the <code>Origin</code> header can match exactly match \
  one of the configured authorized origin URIs, or match one of the configured patterns. Use this configuration with caution.</p>
{tooltip}application.oauthConfiguration.requireClientAuthentication=Enable to require authentication to the Token endpoint, the client_secret may be provided using HTTP Basic Authentication or in the request body
{tooltip}application.oauthConfiguration.requireRegistration=When enabled the user will be required to be registered before redirecting to the configured callback in the authorization code grant or the implicit grant. This configuration does not currently apply to the device or password grant.

{tooltip}application.registrationConfiguration.confirmPassword=Require the user to confirm their password by typing it twice during registration
{tooltip}application.registrationConfiguration.enabled=Enabling self-service registration will provide a button on the login page to allow users to create a new account
{tooltip}application.registrationConfiguration.loginIdType=Choose whether users will log in with their email address or a username, this value will then be collected during registration
{tooltip}application.registrationConfiguration.type=Advanced registration allows you to select a custom form that supports one to many steps
{tooltip}application.registrationConfiguration.formId=Select a form to use for registration
{tooltip}application.unverified.behavior=Configure the desired behavior during login for a user that does not have a verified registration

{tooltip}application.loginConfiguration.allowTokenRefresh=When enabled a JWT may be refreshed using the JWT Refresh API, this is functionally equivalent to enabling the Refresh Grant in OAuth2
{tooltip}application.loginConfiguration.generateRefreshTokens=When enabled the Login API will return refresh tokens, this is functionally equivalent to requesting the offline_scope during an OAuth2 grant
{tooltip}application.loginConfiguration.requireAuthentication=When enabled the Login API will require an API key, when disabled the login API will not require an API key, this is functionally equivalent to requiring client authentication during OAuth

{description}custom-claim-configuration=To modify or augment the claims returned for this application, select a lambda to be invoked during token creation.

# Override the global tooltip for this since the Application has a different config for HMAC secret
{tooltip}jwtConfiguration.secret=Read only. This is the client secret found on the OAuth tab, if you wish to change the secret used for signing and verifying JWTs, you will need to regenerate the client secret. The HMAC secret should be considered sensitive information. It should only be shared with trusted services. Anyone with this secret may sign and verify tokens

{tooltip}tenant=Select the desired tenant for this application

# Multi-factor

# SAML v2 tooltips
{tooltip}application.samlv2Configuration.keyId=The selected key will be used to sign and verify SAML requests, see Key Master settings to add or manage keys
{tooltip}application.samlv2Configuration.defaultVerificationKeyId=The default key used to verify the signature if the public key cannot be determined by the KeyInfo element when using POST bindings, or the key used to verify the signature when using HTTP Redirect bindings
{tooltip}application.samlv2Configuration.debug=Enable debug to create an event log to assist you in debugging integration errors
{tooltip}application.samlv2Configuration.audience=Some service providers require a different audience (such as Zendesk). You can leave this blank if the audience is the same as the issuer
{tooltip}application.samlv2Configuration.authorizedRedirectURLs=One or more allowed URLs that FusionAuth may redirect to after the user has logged in via SAML v2, also known as the Assertion Consumer Service URL (ACS)
{tooltip}application.samlv2Configuration.initiatedLogin.enabled=Enable to allow FusionAuth to initiate a login to a SAML v2 Service Provider by sending an un-solicited AuthN response
{tooltip}application.samlv2Configuration.logoutURL=The URL that the user is redirected to after they are logged out. Usually this is the starting location of the application
{tooltip}application.samlv2Configuration.issuer=The EntityId (unique identifier) of the SAML v2 service provider. This value is used by service providers (e.g. Google, Zendesk, etc.) to uniquely identify themselves to FusionAuth's SAML identity provider. This value will likely be provided to you by the SAML v2 service provider
{tooltip}application.samlv2Configuration.requireSignedRequests=Enable to require the SAML v2 Service Provider to sign the SAML v2 authentication request, when enabled if a signature is omitted the request will be rejected
{tooltip}application.samlv2Configuration.logout.singleLogout.enabled=Enable single logout to receive a LogoutRequest as a session participant when any other SAML enabled application within the same tenant receives a LogoutRequest
{tooltip}application.samlv2Configuration.singleLogout.url=The URL where you want to receive the LogoutRequest from FusionAuth
{tooltip}application.samlv2Configuration.xmlSignatureC14nMethod=This configuration is used when signing an XML document to be sent using an HTTP POST binding, some service providers require specific methods, check with your service provider or test each one to determine which is required
{tooltip}application.samlv2Configuration.xmlSignatureLocation=Some service providers may require the signature in a specific location, when Assertion is selected the signature element will be a child of the assertion, when Response is selected the signature will be placed at the top level of the response
{tooltip}application.samlv2Configuration.logout.requireSignedRequests=Enable to require the SAML v2 Service Provider to sign the SAML v2 logout request, when enabled if a signature is omitted the request will be rejected
{tooltip}application.samlv2Configuration.logout.behavior=When set to All session participants, each session participant that has enabled single logout will be sent a Logout Request, when set to Only Originator, no other session participants will be notified when a logout request is sent for this application. This configuration is functionally equivalent to the Logout Behavior found in the OAuth2 configuration

# Registration delete policy tooltips
{tooltip}application.registrationDeletePolicy.unverified.enabled=Enable to automatically delete unverified registrations after a configured period
{tooltip}application.registrationDeletePolicy.unverified.numberOfDaysToRetain=The number of days before an unverified registration is automatically deleted

# Theme
{tooltip}application.themeId=Specify an application specific theme here to override the theme configured on the tenant

# Errors
[inactive]=That application is not active and cannot be edited.

[couldNotConvert]applicationId=Invalid UUID
[duplicate]applicationId=That Id already exists
[inactive]applicationId=That Id already exists and is inactive

[tooLong]role.description=255 characters max

[blank]application.name=Required
[duplicate]application.name=Already exists
[inactive]application.name=Already exists and is inactive
[startsWithUnderscore]application.name=Underscores are not allowed in application names

[empty]application.roles=Required
[duplicate]application.roles=Already exists

# CleanSpeak errors
[couldNotConvert]application.cleanSpeakConfiguration.usernameModeration.applicationId=Invalid UUID
[missing]application.cleanSpeakConfiguration.usernameModeration.applicationId=Required

# OAuth errors
[couldNotConvert]application.oauthConfiguration.authorizedOriginURLs=Invalid URL
[invalidURL]application.oauthConfiguration.authorizedOriginURLs=URL must begin with http
[invalidURLPattern]application.oauthConfiguration.authorizedOriginURLs=Invalid URL pattern

[couldNotConvert]application.oauthConfiguration.authorizedRedirectURLs=Invalid URL
[invalidURL]application.oauthConfiguration.authorizedRedirectURLs=Invalid URL
[invalidURLPattern]application.oauthConfiguration.authorizedRedirectURLs=Invalid URL pattern

[couldNotConvert]application.oauthConfiguration.logoutURL=Invalid URL
[invalidURL]application.oauthConfiguration.logoutURL=URL must begin with http
[invalidURL]application.oauthConfiguration.deviceVerificationURL=URL must begin with http
[blank]application.oauthConfiguration.deviceVerificationURL=Required

# Verification errors
[missing]application.verificationEmailTemplateId=Required

# JWT Configuration Errors
[tooSmall]application.jwtConfiguration.timeToLiveInSeconds=Invalid number
[couldNotConvert]application.jwtConfiguration.timeToLiveInSeconds=Invalid number
[tooSmall]application.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Invalid number
[couldNotConvert]application.jwtConfiguration.refreshTokenTimeToLiveInMinutes=Invalid number

# Registration delete policy errors
[tooSmall]application.registrationDeletePolicy.unverified.numberOfDaysToRetain=Invalid number

# SAML v2 errors
[empty]application.samlv2Configuration.authorizedRedirectURLs=Required
[missing]application.samlv2Configuration.defaultVerificationKeyId=Required
[blank]application.samlv2Configuration.issuer=Required

[invalidURL]application.samlv2Configuration.authorizedRedirectURLs=One or more URLs are invalid
[invalidURL]application.samlv2Configuration.logout.singleLogout.url=URL must begin with http
[duplicate]application.samlv2Configuration.issuer=Already exists

# Lambda errors
[invalid]application.lambdaConfiguration.accessTokenPopulateId=Missing or deleted
[invalid]application.lambdaConfiguration.idTokenPopulateId=Missing or deleted
[invalid]application.lambdaConfiguration.samlv2PopulateId=Missing or deleted

# Features that require Threat Detection
[notLicensedFor]application.accessControlConfiguration.uiIPAccessControlListId=Threat Detection feature required

[notLicensedFor]application.emailConfiguration.loginIdInUseOnCreateEmailTemplateId=Threat Detection feature required
[notLicensedFor]application.emailConfiguration.loginIdInUseOnUpdateEmailTemplateId=Threat Detection feature required
[notLicensedFor]application.emailConfiguration.loginNewDeviceEmailTemplateId=Threat Detection feature required
[notLicensedFor]application.emailConfiguration.loginSuspiciousEmailTemplateId=Threat Detection feature required
[notLicensedFor]application.emailConfiguration.passwordResetSuccessEmailTemplateId=Threat Detection feature required
[notLicensedFor]application.emailConfiguration.passwordUpdateEmailTemplateId=Threat Detection feature required
[notLicensedFor]application.emailConfiguration.twoFactorMethodAddEmailTemplateId=Threat Detection feature required
[notLicensedFor]application.emailConfiguration.twoFactorMethodRemoveEmailTemplateId=Threat Detection feature required

# Features that require Advanced Multi-Factor Authentication + Application Configuration feature.
[notLicensedFor]application.multiFactorConfiguration.loginPolicy=Advanced Multi-Factor Authentication feature with Application configuration required
[notLicensedFor]application.multiFactorConfiguration.trustPolicy=Advanced Multi-Factor Authentication feature with Application configuration required
[notLicensedFor]application.externalIdentifierConfiguration.twoFactorTrustIdTimeToLiveInSeconds=Advanced Multi-Factor Authentication feature with Application configuration required

# WebAuthn
[notLicensedFor]application.webAuthnConfiguration.enabled=WebAuthn feature required