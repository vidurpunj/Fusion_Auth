#
# Copyright (c) 2020-2023, FusionAuth, All Rights Reserved
#

# Errors
[duplicate]identityProviderId=An Identity Provider with Id [%s] already exists.
[couldNotConvert]identityProviderId=Invalid identityProviderId on the URL [%2$s]. This must be a valid UUID String (e.g. 25a872da-bb44-4af8-a43d-e7bcb5351ebc).

[missing]identityProvider=Your request is missing the IdentityProvider information as JSON in the entity-body.

[invalid]identityProvider.applicationConfiguration=Invalid value for property [identityProvider.applicationConfiguration] the Application with Id [%s] does not exist.

[blank]identityProvider.name=You must specify the [identityProvider.name] property.
[invalid]identityProvider.name=The name [%s] is reserved for the [%s] identity provider, please select a different name.
[duplicate]identityProvider.name=An Identity Provider with name [%s] already exists.

[blank]identityProvider.headerKeyParameter=You must specify the [identityProvider.headerKeyParameter] property.
[blank]identityProvider.uniqueIdentityClaim=You must specify the [identityProvider.uniqueIdentityClaim] property.

[invalid]identityProvider.defaultKeyId=The key with Id [%s] does not exist. Ensure the [identityProvider.defaultKeyId] property is valid.

[duplicate]identityProvider.domains=Invalid value for property [identityProvider.domains]. The following domain(s) [%s] are currently managed by another Identity Provider. A domain may only be managed by a single Identity Provider.
[invalid]identityProvider.claimMap=Invalid value [%s] for property [identityProvider.claimMap[%s]]. The supported values are [%s].

[invalid]identityProvider.oauth2.issuer=Invalid value for property [identityProvider.oauth2.issuer]. The value must be a valid URL and reachable by FusionAuth to resolve the OpenID Connect endpoints. See the Event Log for additional details.

# Missing endpoints on the Well-Known OpenID Configuration response
[missing]identityProvider.oauth2.authorization_endpoint=The issuer [%s] returned a JSON response body that did not contain the authorization_endpoint field. This field is required to configure OpenID Connect.
[missing]identityProvider.oauth2.token_endpoint=The issuer [%s] returned a JSON response body that did not contain the token_endpoint field. This field is required to configure OpenID Connect.
[missing]identityProvider.oauth2.userinfo_endpoint=The issuer [%s] returned a JSON response body that did not contain the userinfo_endpoint field. This field is required to configure OpenID Connect.

# Required fields
[blank]identityProvider.appId=You must specify the [identityProvider.appId] property.
[blank]identityProvider.buttonText=You must specify the [identityProvider.buttonText] property.
[blank]identityProvider.client_id=You must specify the [identityProvider.client_id] property.
[blank]identityProvider.client_secret=You must specify the [identityProvider.client_secret] property.
[blank]identityProvider.consumerKey=You must specify the [identityProvider.consumerKey] property.
[blank]identityProvider.consumerSecret=You must specify the [identityProvider.consumerSecret] property.

[missing]identityProvider.oauth2.client_secret=You must specify the [identityProvider.oauth2.client_secret] when [identityProvider.applicationConfiguration.oauth2.clientAuthenticationMethod] is [client_secret_basic] or [client_secret_post] for the %s identity provider.
[blank]identityProvider.oauth2.client_id=You must specify the [identityProvider.oauth2.client_id] property or specify the [identityProvider.applicationConfiguration.oauth2.client_id] property for each Application configured for the %s identity provider.
[blank]identityProvider.oauth2.authorization_endpoint=You must specify the [identityProvider.oauth2.authorization_endpoint] property or specify the [identityProvider.oauth2.issuer] property so that the endpoints may be automatically discovered.
[blank]identityProvider.oauth2.token_endpoint=You must specify the [identityProvider.oauth2.token_endpoint] property or specify the [identityProvider.oauth2.issuer] property so that the endpoints may be automatically discovered.
[blank]identityProvider.oauth2.userinfo_endpoint=You must specify the [identityProvider.oauth2.userinfo_endpoint] property or specify the [identityProvider.oauth2.issuer] property so that the endpoints may be automatically discovered.
[blank]identityProvider.oauth2.emailClaim=You must specify the [identityProvider.emailClaim] property.

[invalidURL]identityProvider.oauth2.authorization_endpoint=The value specified for the [identityProvider.oauth2.authorization_endpoint] property must be a valid absolute URL.
[invalidURL]identityProvider.oauth2.token_endpoint=The value specified for the [identityProvider.oauth2.token_endpoint] property must be a valid absolute URL.
[invalidURL]identityProvider.oauth2.userinfo_endpoint=The value specified for the [identityProvider.oauth2.userinfo_endpoint] property must be a valid absolute URL.

# Apple fields
[blank]identityProvider.bundleId=You must specify at least one of the [identityProvider.servicesId] or [identityProvider.bundleId] properties.
[blank]identityProvider.servicesId=You must specify at least one of the [identityProvider.servicesId] or [identityProvider.bundleId] properties.
[blank]identityProvider.teamId=You must specify the [identityProvider.teamId] property.
[invalid]identityProvider.applicationConfiguration.keyId=The key with Id [%s] does not exist. Ensure the [identityProvider.applicationConfiguration.keyId] property is valid.
[cannotSign]identityProvider.applicationConfiguration.keyId=The key with Id [%s] does not contain a public key and therefore cannot be used to verify signatures.

# External JWT field errors
[cannotVerify]identityProvider.defaultKeyId=The key with Id [%s] does not contain a public key and therefore cannot be used to verify signatures.

# HYPR fields
[blank]identityProvider.relyingPartyApplicationId=You must specify the [identityProvider.relyingPartyApplicationId] property.
[missing]identityProvider.relyingPartyURL=You must specify the [identityProvider.relyingPartyURL] property.
[invalidURL]identityProvider.applicationConfiguration.relyingPartyURL=The value specified for the [identityProvider.applicationConfiguration.relyingPartyURL] property must be a valid absolute URL.
[invalidURL]identityProvider.relyingPartyURL=The value specified for the [identityProvider.relyingPartyURL] property must be a valid absolute URL.

# SAML v2 fields
[blank]identityProvider.emailClaim=You must specify the [identityProvider.emailClaim] property.
[blank]identityProvider.idpEndpoint=You must specify the [identityProvider.idpEndpoint] property.
[invalidURL]identityProvider.idpEndpoint=The value specified for the [identityProvider.idpEndpoint] property must be a valid absolute URL.
[blank]identityProvider.loginHintConfiguration.parameterName=You must specify the [identityProvider.loginHintConfiguration.parameterName] property when [identityProvider.loginHintConfiguration.enabled] is true.
[notLicensed]identityProvider.idpInitiatedConfiguration.enabled=You must activate the Reactor using a valid license before enabling IdP support for IdP initiated requests.
[blank]identityProvider.idpInitiatedConfiguration.issuer=You must specify the [identityProvider.idpInitiatedConfiguration.issuer] property when [identityProvider.idpInitiatedConfiguration.enabled] is true.

# Apple & SAML v2
[missing]identityProvider.keyId=You must specify the [identityProvider.keyId] property.
[invalid]identityProvider.keyId=The key with Id [%s] does not exist. Ensure the [identityProvider.keyId] property is valid.
[cannotSign]identityProvider.keyId=The key with Id [%s] does not contain a private key and therefore cannot be used to sign requests.
[cannotVerify]identityProvider.keyId=The key with Id [%s] does not contain a public key and therefore cannot be used to verify signatures.
[missing]identityProvider.requestSigningKeyId=You must specify the [identityProvider.requestSigningKeyId] property when [identityProvider.signRequest] is true.
[invalid]identityProvider.requestSigningKeyId=The key with Id [%s] does not exist. Ensure the [identityProvider.requestSigningKeyId] property is valid.
[cannotSign]identityProvider.requestSigningKeyId=The key with Id [%s] does not contain a private key or does not contain an X.509 certificate and therefore is not eligible to be used to sign SAML requests.
[missing]identityProvider.xmlSignatureC14nMethod=You must specify the [identityProvider.xmlSignatureC14nMethod] when [identityProvider.signRequest] is true and [identity.provider.postRequest] is true.

# IdP Reconcile Lambda Id
[invalid]identityProvider.lambdaConfiguration.reconcileId=The lambda with Id [%s] does not exist. Ensure the [identityProvider.lambdaConfiguration.reconcileId] property is valid.
[type]identityProvider.lambdaConfiguration.reconcileId=The lambda with Id [%s] is not compatible with the identity provider. A lambda of type [%s] is required. 

# Duplicate providers
[AppleAlreadyCreated]=An Apple identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[EpicGamesAlreadyCreated]=An Epic Games identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[FacebookAlreadyCreated]=A Facebook identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[GoogleAlreadyCreated]=A Google identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[HYPRAlreadyCreated]=A HYPR identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[LinkedInAlreadyCreated]=A LinkedIn identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[NintendoAlreadyCreated]=A Nintendo identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[SonyPSNAlreadyCreated]=A Sony PlayStation Network identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[SteamAlreadyCreated]=A Steam identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[TwitchAlreadyCreated]=A Twitch identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[TwitterAlreadyCreated]=A Twitter identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.
[XboxAlreadyCreated]=An Xbox identity provider already exists. You may modify the existing configuration to enable this provider for additional applications.

# Tenant configuration
[invalid]identityProvider.tenantConfiguration=Invalid value for property [identityProvider.tenantConfiguration] the Tenant with Id [%s] does not exist.
[invalid]identityProvider.tenantConfiguration.limitUserLinkCount.maximumLinks=The [identityProvider.tenantConfiguration.limitUserLinkCount.maximumLinks] property must be greater than 0.

# License
[notLicensed]identityProvider.type=The [%s] identity provider type requires a paid edition of FusionAuth.
[restricted]=Your request is not allowed. You cannot delete an identity provider using a tenant restricted request. Omit the X-FusionAuth-TenantId HTTP header if provided, or repeat the request with an API key that is not assigned to a particular tenant.
